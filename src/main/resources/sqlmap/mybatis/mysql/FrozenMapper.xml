<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.mgs.order.api.dao.FrozenDao">
    <resultMap id="FrozenInfoMapping" type="com.aiqin.mgs.order.api.domain.FrozenInfo">
<result column="frozen_id" jdbcType="VARCHAR" property="frozenId"/>
<result column="distributor_id" jdbcType="VARCHAR" property="distributorId"/>
<result column="distributor_code" jdbcType="VARCHAR" property="distributorCode"/>
<result column="distributor_name" jdbcType="VARCHAR" property="distributorName"/>
<result column="member_id" jdbcType="VARCHAR" property="memberId"/>
<result column="member_name" jdbcType="VARCHAR" property="memberName"/>
<result column="sale_byid" jdbcType="VARCHAR" property="saleById"/>
<result column="sale_byname" jdbcType="VARCHAR" property="saleByName"/>
<result column="product_id" jdbcType="VARCHAR" property="productId"/>
<result column="sku_code" jdbcType="VARCHAR" property="skuCode"/>
<result column="product_name" jdbcType="VARCHAR" property="productName"/>
<result column="orig_price" jdbcType="BIGINT" property="origPrice"/>
<result column="curr_price" jdbcType="BIGINT" property="currPrice"/>
<result column="amount" jdbcType="INTEGER" property="amount"/>
<result column="price" jdbcType="BIGINT" property="price"/>
<result column="create_by" jdbcType="VARCHAR" property="createBy"/>
<result column="create_time" jdbcType="VARCHAR" property="createTime"/>
<result column="memo" jdbcType="VARCHAR" property="memo"/>
    <result column="sum_amount" jdbcType="INTEGER" property="sumAmount"/>
    <result column="sum_sale" jdbcType="INTEGER" property="sumSale"/>
    <result column="sum_price" jdbcType="INTEGER" property="sumPrice"/>
        <result column="is_prestorage" jdbcType="INTEGER" property="isPrestorage"/>

    </resultMap>


    <!-- 挂单入库 -->
    <insert id="insert" parameterType="com.aiqin.mgs.order.api.domain.FrozenInfo">
        
        insert into order_consumer_frozen
			(frozen_id,distributor_id,distributor_code,distributor_name,member_id,member_name,product_id,product_name,sku_code,orig_price,
			curr_price,amount,price,create_by,create_time,memo,is_prestorage)
		values
		    (#{frozenId},#{distributorId},#{distributorCode},#{distributorName},#{memberId},#{memberName},#{productId},#{productName},#{skuCode},#{origPrice},
		    #{currPrice},#{amount},#{price},#{createBy},CURRENT_TIMESTAMP,#{memo},#{isPrestorage})
    
    </insert>


    <!-- 解卦 -->
    <delete id="deleteByFrozenId">
		
		delete from order_consumer_frozen where frozen_id = #{frozenId}
        
     </delete>

    <!-- 查询挂单明细 -->
    <select id="selectDetailByFrozenId" resultMap="FrozenInfoMapping" resultType="java.util.List">

        select * from order_consumer_frozen where 1=1
        <if test=" frozenId != null and frozenId!='' ">
            and frozen_id = #{frozenId}
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- 查询挂单明细 -->
    <select id="selectDetail" resultMap="FrozenInfoMapping" resultType="java.util.List">

        select * from order_consumer_frozen where 1=1
        <if test=" createBy != null and createBy!='' ">
            and create_by = #{createBy}
        </if>
        <if test=" distributorId != null and distributorId!='' ">
            and distributor_id = #{distributorId}
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- 查询挂单汇总 -->
    <select id="selectSumByFrozenId" resultMap="FrozenInfoMapping" resultType="java.util.List">

        SELECT frozen_id,member_name,create_time,create_by,COUNT(frozen_id) AS sum_sale, SUM(IFNULL(amount,0)) AS
        sum_amount,SUM(IFNULL(price,0)) AS sum_price FROM order_consumer_frozen
        WHERE 1=1
        <if test=" createBy != null and createBy!='' ">
            and create_by = #{createBy}
        </if>
        <if test=" distributorId != null and distributorId!='' ">
            and distributor_id = #{distributorId}
        </if>
        GROUP BY frozen_id,member_name,create_time,create_by
        ORDER BY create_time DESC
    </select>

    <!-- 查询挂单数量 -->
    <select id="selectSumByParam" resultType="java.lang.Integer">

        SELECT COUNT(DISTINCT(frozen_id)) AS frozensum FROM order_consumer_frozen where 1=1
        <if test=" createBy != null and createBy!='' ">
            and create_by = #{createBy}
        </if>
        <if test=" distributorId != null and distributorId!='' ">
            and distributor_id = #{distributorId}
        </if>
    </select>

</mapper>

