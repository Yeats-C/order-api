<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.mgs.order.api.dao.OrderDao">
    <resultMap id="OrderInfoMapping" type="com.aiqin.mgs.order.api.domain.OrderInfo">
        <result column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="order_code" jdbcType="VARCHAR" property="orderCode"/>
        <result column="member_id" jdbcType="VARCHAR" property="memberId"/>
        <result column="member_name" jdbcType="VARCHAR" property="memberName"/>
        <result column="member_phone" jdbcType="VARCHAR" property="memberPhone"/>
        <result column="distributor_id" jdbcType="VARCHAR" property="distributorId"/>
        <result column="distributor_code" jdbcType="VARCHAR" property="distributorCode"/>
        <result column="distributor_name" jdbcType="VARCHAR" property="distributorName"/>
        <result column="origin_type" jdbcType="TINYINT" property="originType"/>
        <result column="receive_type" jdbcType="TINYINT" property="receiveType"/>
        <result column="receive_code" jdbcType="VARCHAR" property="receiveCode"/>
        <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime"/>
        <result column="order_status" jdbcType="TINYINT" property="orderStatus"/>
        <result column="return_status" jdbcType="TINYINT" property="returnStatus"/>
        <result column="pay_status" jdbcType="TINYINT" property="payStatus"/>
        <result column="pay_type" jdbcType="VARCHAR" property="payType"/>
        <result column="actual_price" jdbcType="BIGINT" property="actualPrice"/>
        <result column="total_price" jdbcType="BIGINT" property="totalPrice"/>
        <result column="custom_note" jdbcType="VARCHAR" property="customNote"/>
        <result column="business_note" jdbcType="VARCHAR" property="businessNote"/>
        <result column="cashier_id" jdbcType="VARCHAR" property="cashierId"/>
        <result column="cashier_name" jdbcType="VARCHAR" property="cashierName"/>
        <result column="guide_id" jdbcType="VARCHAR" property="guideId"/>
        <result column="guide_name" jdbcType="VARCHAR" property="guideName"/>
        <result column="order_type" jdbcType="TINYINT" property="orderType"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="sku_sum" jdbcType="INTEGER" property="skuSum"/>
        <result column="shop_order_preferential" jdbcType="INTEGER" property="shopOrderPreferential"/>
    </resultMap>
    <resultMap id="ReceiptSumMapping" type="com.aiqin.mgs.order.api.domain.response.OrderbyReceiptSumResponse">
        <result column="cashier_id" jdbcType="VARCHAR" property="cashierId"/>
        <result column="cashier_name" jdbcType="VARCHAR" property="cashierName"/>
        <result column="pay_type" jdbcType="INTEGER" property="payType"/>
        <result column="pay_price" jdbcType="INTEGER" property="payPrice"/>
        <result column="cash" jdbcType="INTEGER" property="cash"/>
        <result column="we_chat" jdbcType="INTEGER" property="weChat"/>
        <result column="ali_pay" jdbcType="INTEGER" property="aliPay"/>
        <result column="bank_card" jdbcType="INTEGER" property="bankCard"/>
        <result column="return_price" jdbcType="INTEGER" property="returnPrice"/>
        <result column="sales_amount" jdbcType="INTEGER" property="salesAmount"/>
        <result column="sales_order_amount" jdbcType="INTEGER" property="salesOrderAmount"/>
        <result column="return_order_amount" jdbcType="INTEGER" property="returnOrderAmount"/>
    </resultMap>

    <resultMap id="LastPrestorageMapping" type="com.aiqin.mgs.order.api.domain.response.PrestorageResponse">
        <result column="prestorage_order_supply_detail_id" jdbcType="VARCHAR" property="prestorageOrderSupplyDetailId"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="amount" jdbcType="INTEGER" property="amount"/>
        <result column="return_amount" jdbcType="INTEGER" property="returnAmount"/>
        <result column="return_prestorage_amount" jdbcType="INTEGER" property="returnPrestorageAmount"/>
        <result column="supply_amount" jdbcType="INTEGER" property="supplyAmount"/>
        <result column="sku_code" jdbcType="VARCHAR" property="skuCode"/>
        <result column="prestorage_order_supply_id" jdbcType="VARCHAR" property="prestorageOrderSupplyId"/>
        <result column="distributor_code" jdbcType="VARCHAR" property="distributorCode"/>
        <result column="distributor_id" jdbcType="VARCHAR" property="distributorId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="order_code" jdbcType="VARCHAR" property="orderCode"/>
    </resultMap>
    <resultMap id="LastBuyMapping" type="com.aiqin.mgs.order.api.domain.response.LastBuyResponse">
        <result column="new_consume_time" jdbcType="TIMESTAMP" property="newConsumeTime"/>
        <result column="product" jdbcType="VARCHAR" property="product"/>
    </resultMap>

    <resultMap id="DevelMapping" type="com.aiqin.mgs.order.api.domain.request.DevelRequest">
        <result column="trante" jdbcType="VARCHAR" property="trante"/>
        <result column="acount" jdbcType="INTEGER" property="acount"/>
    </resultMap>

    <resultMap id="OradskuMapping" type="com.aiqin.mgs.order.api.domain.response.OradskuResponse">
        <result column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="order_code" jdbcType="VARCHAR" property="orderCode"/>
        <result column="member_id" jdbcType="VARCHAR" property="memberId"/>
        <result column="member_name" jdbcType="VARCHAR" property="memberName"/>
        <result column="member_phone" jdbcType="VARCHAR" property="memberPhone"/>
        <result column="distributor_id" jdbcType="VARCHAR" property="distributorId"/>
        <result column="distributor_code" jdbcType="VARCHAR" property="distributorCode"/>
        <result column="distributor_name" jdbcType="VARCHAR" property="distributorName"/>
        <result column="origin_type" jdbcType="TINYINT" property="originType"/>
        <result column="receive_type" jdbcType="TINYINT" property="receiveType"/>
        <result column="receive_code" jdbcType="VARCHAR" property="receiveCode"/>
        <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime"/>
        <result column="order_status" jdbcType="TINYINT" property="orderStatus"/>
        <result column="return_status" jdbcType="TINYINT" property="returnStatus"/>
        <result column="pay_status" jdbcType="TINYINT" property="payStatus"/>
        <result column="pay_type" jdbcType="VARCHAR" property="payType"/>
        <result column="actual_price" jdbcType="BIGINT" property="actualPrice"/>
        <result column="total_price" jdbcType="BIGINT" property="totalPrice"/>
        <result column="custom_note" jdbcType="VARCHAR" property="customNote"/>
        <result column="business_note" jdbcType="VARCHAR" property="businessNote"/>
        <result column="cashier_id" jdbcType="VARCHAR" property="cashierId"/>
        <result column="cashier_name" jdbcType="VARCHAR" property="cashierName"/>
        <result column="guide_id" jdbcType="VARCHAR" property="guideId"/>
        <result column="guide_name" jdbcType="VARCHAR" property="guideName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
    </resultMap>

    <resultMap id="selectOrderByNineDateMapping" type="com.aiqin.mgs.order.api.domain.response.OrderResponse">
        <result column="actual_price" jdbcType="INTEGER" property="actualPrice"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
        <result column="order_count" jdbcType="INTEGER" property="orderCount"/>
    </resultMap>

    <!--营业统计数据-->
    <resultMap id="resultStatisticalBusiness" type="com.aiqin.mgs.order.api.domain.statistical.BusinessStatistical">
        <result column="total_paid_price" jdbcType="BIGINT" property="totalPaidPrice"/>
        <result column="amount" jdbcType="INTEGER" property="amount"/>
        <result column="avg_paid_price" jdbcType="BIGINT" property="avgPaidPrice"/>
        <result column="date_tag" jdbcType="VARCHAR" property="dateTag"/>
    </resultMap>

    <resultMap id="LatelyResponse" type="com.aiqin.mgs.order.api.domain.response.LatelyResponse">
        <result column="pay_time" property="pay_time"/>
        <result column="price" property="price"/>
    </resultMap>


    <!-- 插入订单表 -->
    <insert id="addOrderInfo">
        insert into order_consumer_info
        (order_id,order_code,member_id,member_name,member_phone,distributor_id,distributor_code,distributor_name,origin_type,receive_type,order_status,
        <if test="returnStatus!=null">
            return_status,
        </if>
        pay_status,pay_type,
        <if test="actualPrice!=null">
            actual_price,
        </if>
        <if test="totalPrice!=null">
            total_price,
        </if>
        custom_note,business_note,cashier_id,cashier_name,guide_id,guide_name,order_type,create_time,update_time,create_by,update_by,receive_code,receive_time,shop_order_preferential)
        values
        (#{orderId},#{orderCode},#{memberId},#{memberName},#{memberPhone},#{distributorId},#{distributorCode},#{distributorName},#{originType},#{receiveType},#{orderStatus},
        <if test="returnStatus!=null">
            #{returnStatus},
        </if>
        #{payStatus},#{payType},
        <if test="actualPrice!=null">
            #{actualPrice},
        </if>
        <if test="totalPrice!=null">
            #{totalPrice},
        </if>
        #{customNote},#{businessNote},#{cashierId},#{cashierName},#{guideId},#{guideName},#{orderType},CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#{createBy},#{updateBy},#{receiveCode},CURRENT_TIMESTAMP,#{shopOrderPreferential})
    </insert>

    <!-- 订单查询byorderid -->
    <select id="selecOrderById" resultMap="OrderInfoMapping">
        SELECT * FROM order_consumer_info
        where 1=1
        <choose>
            <when test="orderType != null ">
                and order_type =#{orderType}
            </when>

        </choose>
        <if test="orderId!=null and orderId!=''">
            and order_id = #{orderId}
        </if>
        <if test="orderCode!=null and orderCode!=''">
            and order_code = #{orderCode}
        </if>
        LIMIT 1
    </select>

    <!-- 预存订单查询 -->
    <select id="selectPrestorageOrder" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery"
            resultMap="LastPrestorageMapping"
            resultType="java.util.List">

        select d.sku_code, d.prestorage_order_supply_detail_id,d.product_name ,d.amount ,d.return_amount ,d.return_prestorage_amount,d.supply_amount ,s.create_time from prestorage_order_supply s,prestorage_order_supply_detail d
        where  s.prestorage_order_supply_id=d.prestorage_order_supply_id and s.distributor_id = #{distributorId} and s.member_id =#{memberId}


        ORDER BY s.create_time DESC

    </select>
    <!-- 总条数 -->
    <select id="selectPrestorageOrderCount" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery"
            resultType="java.lang.Integer">
         SELECT count(1) FROM prestorage_order_supply s,prestorage_order_supply_detail d
        WHERE  s.prestorage_order_supply_id=d.prestorage_order_supply_id and s.distributor_id = #{distributorId} and s.member_id =#{memberId}


    </select>

    <!-- 预存订单详情查询 -->
    <select id="selectprestorageorderDetails" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery"
            resultMap="LastPrestorageMapping"
            resultType="java.util.List">

        select d.prestorage_order_supply_detail_id,d.product_name ,d.amount ,d.return_amount ,d.return_prestorage_amount,d.supply_amount,d.sku_code ,d.prestorage_order_supply_id,s.distributor_code ,s.distributor_id ,s.order_code from prestorage_order_supply s,prestorage_order_supply_detail d
        where  d.prestorage_order_supply_detail_id = #{prestorageOrderSupplyDetailId} and s.prestorage_order_supply_id=d.prestorage_order_supply_id


        ORDER BY s.create_time DESC

    </select>


    <!-- 模糊订单查询分页 -->
    <select id="selectOrder" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery" resultMap="OrderInfoMapping"
            resultType="java.util.List">
        SELECT a.* FROM order_consumer_info a
        <if test="(skuName!=null and skuName!='') or (barCodeAndSku !=null and barCodeAndSku != '')">
            ,order_consumer_detail b
        </if>
        WHERE 1=1
        <choose>
            <when test="orderType!=null and orderType!='' ">
                and a.order_type = #{orderType}
            </when>
            <otherwise>
                and (order_type = 1 or order_type = 4)
            </otherwise>
        </choose>
        <if test="distributorId!=null and distributorId!='' ">
            and a.distributor_id = #{distributorId}
        </if>
        <if test="distributorCode!=null and distributorCode!='' ">
            and a.distributor_code = #{distributorCode}
        </if>

        <if test="listDistributorId != null">
            and a.distributor_id in (
            <foreach collection="listDistributorId" item="distributorId" separator=",">
                '${distributorId}'
            </foreach>
            )
        </if>
        <if test="distributorName!=null and distributorName!=''">
            and a.distributor_name like concat('%',#{distributorName,jdbcType=VARCHAR},'%')
        </if>
        <if test="orderId!=null and orderId!=''">
            and a.order_id = #{orderId}
        </if>
        <if test="orderCode!=null and orderCode!=''">
            and a.order_code like concat('%',#{orderCode,jdbcType=VARCHAR},'%')
        </if>
        <if test="memberId!=null and memberId!=''">
            and a.member_id =#{memberId}
        </if>
        <if test="memberidList != null">
            and a.member_id in (
            <foreach collection="memberidList" item="member_id" separator=",">
                '${member_id}'
            </foreach>
            )
        </if>
        <if test="memberPhone!=null and memberPhone!=''">
            and a.member_phone like concat('%',#{memberPhone,jdbcType=VARCHAR},'%')
        </if>
        <if test="codeAndPhone!=null and codeAndPhone!=''">
            and (a.member_phone like concat('%',#{codeAndPhone,jdbcType=VARCHAR},'%') or a.order_code like
            concat('%',#{codeAndPhone,jdbcType=VARCHAR},'%'))
        </if>
        <if test="orderStatus!=null ">
            and a.order_status = #{orderStatus}
        </if>
        <if test="orderStatusList != null">
            and a.order_status in (
            <foreach collection="orderStatusList" item="order_status" separator=",">
                '${order_status}'
            </foreach>
            )
        </if>
        <if test="beginTime!=null ">
            and a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            and a.create_time &lt;= #{endTime}
        </if>
        <if test="updateTime!=null ">
            and a.update_time &gt;= #{updateTime}
        </if>
        <if test="originTypeList != null">
            and a.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        <if test="orderIdList != null">
            and a.order_id in (
            <foreach collection="orderIdList" item="order_id" separator=",">
                '${order_id}'
            </foreach>
            )
        </if>
        <if test="noExistOrderCodeList != null">
            and a.order_code not in (
            <foreach collection="noExistOrderCodeList" item="order_code" separator=",">
                '${order_code}'
            </foreach>
            )
        </if>
        <if test="receiveType!=null ">
            and a.receive_type =#{receiveType}
        </if>
        <if test="receiveCode!=null and receiveCode!='' ">
            and a.receive_code =#{receiveCode}
        </if>
        <if test="originType!=null  ">
            and a.origin_type =#{originType}
        </if>
        <if test="payType!=null and payType!='' ">
            and a.pay_type =#{payType}
        </if>
        <if test="(skuName!=null and skuName!='') or (barCodeAndSku !=null and barCodeAndSku != '')">
            and a.order_id = b.order_id
            <if test="skuName!=null and skuName!='' ">
                and b.sku_name like concat('%',#{skuName,jdbcType=VARCHAR},'%')
            </if>
            <if test="barCodeAndSku!=null and barCodeAndSku!='' ">
                and (b.sku_code = #{barCodeAndSku} or b.bar_code = #{barCodeAndSku})
            </if>
            group by a.id
        </if>
        ORDER BY a.create_time DESC
        <if test="icount!=null ">
            limit #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <!-- 总条数 -->
    <select id="selectOrderCount" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery"
            resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT(a.id)) FROM order_consumer_info a
        <if test="(skuName!=null and skuName!='') or (barCodeAndSku !=null and barCodeAndSku != '')">
            ,order_consumer_detail b
        </if>
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId!='' ">
            and a.distributor_id = #{distributorId}
        </if>
        <if test="distributorCode!=null and distributorCode!='' ">
            and a.distributor_code = #{distributorCode}
        </if>
        <if test="listDistributorId != null">
            and a.distributor_id in (
            <foreach collection="listDistributorId" item="distributorId" separator=",">
                '${distributorId}'
            </foreach>
            )
        </if>
        <if test="distributorName!=null and distributorName!=''">
            and a.distributor_name like concat('%',#{distributorName,jdbcType=VARCHAR},'%')
        </if>
        <if test="orderId!=null and orderId!=''">
            and a.order_id = #{orderId}
        </if>
        <if test="orderCode!=null and orderCode!=''">
            and a.order_code like concat('%',#{orderCode,jdbcType=VARCHAR},'%')
        </if>
        <if test="memberId!=null and memberId!=''">
            and a.member_id =#{memberId}
        </if>
        <if test="memberidList != null">
            and a.member_id in (
            <foreach collection="memberidList" item="member_id" separator=",">
                '${member_id}'
            </foreach>
            )
        </if>
        <if test="memberPhone!=null and memberPhone!=''">
            and a.member_phone like concat('%',#{memberPhone,jdbcType=VARCHAR},'%')
        </if>
        <if test="codeAndPhone!=null and codeAndPhone!=''">
            and (a.member_phone like concat('%',#{codeAndPhone,jdbcType=VARCHAR},'%') or a.order_code like
            concat('%',#{codeAndPhone,jdbcType=VARCHAR},'%'))
        </if>
        <if test="orderStatus!=null ">
            and a.order_status = #{orderStatus}
        </if>
        <if test="originType!=null ">
            and a.origin_type =#{originType}
        </if>
        <if test="orderStatusList != null">
            and a.order_status in (
            <foreach collection="orderStatusList" item="order_status" separator=",">
                '${order_status}'
            </foreach>
            )
        </if>
        <if test="beginTime!=null ">
            and a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            and a.create_time &lt;= #{endTime}
        </if>
        <if test="originTypeList != null">
            and a.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        <if test="orderIdList != null">
            and a.order_id in (
            <foreach collection="orderIdList" item="order_id" separator=",">
                '${order_id}'
            </foreach>
            )
        </if>
        <if test="noExistOrderCodeList != null">
            and a.order_code not in (
            <foreach collection="noExistOrderCodeList" item="order_code" separator=",">
                '${order_code}'
            </foreach>
            )
        </if>
        <if test="receiveType!=null ">
            and a.receive_type =#{receiveType}
        </if>
        <if test="receiveCode!=null and receiveCode!='' ">
            and a.receive_code =#{receiveCode}
        </if>
        <if test="payType!=null and payType!='' ">
            and a.pay_type =#{payType}
        </if>
        <if test="(skuName!=null and skuName!='') or (barCodeAndSku !=null and barCodeAndSku != '')">
            and a.order_id = b.order_id
            <if test="skuName!=null and skuName!='' ">
                and b.sku_name like concat('%',#{skuName,jdbcType=VARCHAR},'%')
            </if>
            <if test="barCodeAndSku!=null and barCodeAndSku!='' ">
                and (b.sku_code = #{barCodeAndSku} or b.bar_code = #{barCodeAndSku})
            </if>
        </if>
    </select>


    <select id="getUnPayNum" parameterType="com.aiqin.mgs.order.api.domain.request.UnPayVo"
            resultType="java.lang.Integer">
        SELECT count(distinct a.member_id) FROM order_consumer_info a
        WHERE 1=1
        <if test="distributorId!=null and distributorId!='' ">
            and a.distributor_id = #{distributorId}
        </if>

        <if test="orderStatus!=null ">
            and a.order_status = #{orderStatus}
        </if>
        <if test="orderStatusList != null">
            and a.order_status in (
            <foreach collection="orderStatusList" item="order_status" separator=",">
                '${order_status}'
            </foreach>
            )
        </if>
        <if test="beginTime!=null ">
            and a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            and a.create_time &lt;= #{endTime}
        </if>

    </select>

    <select id="getUnPayMemberIdList" parameterType="com.aiqin.mgs.order.api.domain.request.UnPayVo"
            resultType="java.lang.String">
        SELECT distinct a.member_id FROM order_consumer_info a
        WHERE 1=1
        <if test="distributorId!=null and distributorId!='' ">
            and a.distributor_id = #{distributorId}
        </if>

        <if test="orderStatus!=null ">
            and a.order_status = #{orderStatus}
        </if>
        <if test="orderStatusList != null">
            and a.order_status in (
            <foreach collection="orderStatusList" item="order_status" separator=",">
                '${order_status}'
            </foreach>
            )
        </if>
        <if test="beginTime!=null ">
            and a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            and a.create_time &lt;= #{endTime}
        </if>
        ORDER BY a.distributor_id DESC
        limit #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>
    <!-- 模糊查询订单列表+订单中商品sku数量分页 -->
    <select id="selectskuResponse" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery" resultMap="OradskuMapping"
            resultType="java.util.List">
        SELECT a.*,a.create_time AS pay_time FROM order_consumer_info a
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId!='' ">
            and a.distributor_id = #{distributorId}
        </if>
        <if test="distributorName!=null and distributorName!=''">
            and a.distributor_name like concat('%',#{distributorName,jdbcType=VARCHAR},'%')
        </if>
        <if test="orderId!=null and orderId!=''">
            and a.order_id = #{orderId}
        </if>
        <if test="orderCode!=null and orderCode!=''">
            and a.order_code like concat('%',#{orderCode,jdbcType=VARCHAR},'%')
        </if>
        <if test="memberId!=null and memberId!=''">
            and a.member_id =#{memberId}
        </if>
        <if test="memberidList != null">
            and a.member_id in (
            <foreach collection="memberidList" item="member_id" separator=",">
                '${member_id}'
            </foreach>
            )
        </if>
        <if test="memberPhone!=null and memberPhone!=''">
            and a.member_phone like concat('%',#{memberPhone,jdbcType=VARCHAR},'%')
        </if>
        <if test="codeAndPhone!=null and codeAndPhone!=''">
            and (a.member_phone like concat('%',#{codeAndPhone,jdbcType=VARCHAR},'%') or a.order_code like
            concat('%',#{codeAndPhone,jdbcType=VARCHAR},'%'))
        </if>
        <if test="orderStatus!=null ">
            and a.order_status = #{orderStatus}
        </if>
        <if test="orderStatusList != null">
            and a.order_status in (
            <foreach collection="orderStatusList" item="order_status" separator=",">
                '${order_status}'
            </foreach>
            )
        </if>
        <if test="beginTime!=null ">
            and a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            and a.create_time &lt;= #{endTime}
        </if>
        <if test="originTypeList != null">
            and a.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        <if test="orderIdList != null">
            and a.order_id in (
            <foreach collection="orderIdList" item="order_id" separator=",">
                '${order_id}'
            </foreach>
            )
        </if>
        <if test="noExistOrderCodeList != null">
            and a.order_code not in (
            <foreach collection="noExistOrderCodeList" item="order_code" separator=",">
                '${order_code}'
            </foreach>
            )
        </if>
        <if test="receiveType!=null ">
            and a.receive_type =#{receiveType}
        </if>
        <if test="receiveCode!=null and receiveCode!='' ">
            and a.receive_code =#{receiveCode}
        </if>
        ORDER BY a.create_time DESC
        <if test="icount!=null ">
            limit #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <!-- 模糊查询订单列表+订单中商品sku数量 总数据量 -->
    <select id="skuResponseCount" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery"
            resultType="java.lang.Integer">
        SELECT count(1) FROM order_consumer_info a
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId!='' ">
            and a.distributor_id = #{distributorId}
        </if>
        <if test="distributorName!=null and distributorName!=''">
            and a.distributor_name like concat('%',#{distributorName,jdbcType=VARCHAR},'%')
        </if>
        <if test="orderId!=null and orderId!=''">
            and a.order_id = #{orderId}
        </if>
        <if test="orderCode!=null and orderCode!=''">
            and a.order_code like concat('%',#{orderCode,jdbcType=VARCHAR},'%')
        </if>
        <if test="memberId!=null and memberId!=''">
            and a.member_id =#{memberId}
        </if>
        <if test="memberidList != null">
            and a.member_id in (
            <foreach collection="memberidList" item="member_id" separator=",">
                '${member_id}'
            </foreach>
            )
        </if>
        <if test="memberPhone!=null and memberPhone!=''">
            and a.member_phone like concat('%',#{memberPhone,jdbcType=VARCHAR},'%')
        </if>
        <if test="codeAndPhone!=null and codeAndPhone!=''">
            and (a.member_phone like concat('%',#{codeAndPhone,jdbcType=VARCHAR},'%') or a.order_code like
            concat('%',#{codeAndPhone,jdbcType=VARCHAR},'%'))
        </if>
        <if test="orderStatus!=null ">
            and a.order_status = #{orderStatus}
        </if>
        <if test="orderStatusList != null">
            and a.order_status in (
            <foreach collection="orderStatusList" item="order_status" separator=",">
                '${order_status}'
            </foreach>
            )
        </if>
        <if test="beginTime!=null ">
            and a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            and a.create_time &lt;= #{endTime}
        </if>
        <if test="originTypeList != null">
            and a.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        <if test="orderIdList != null">
            and a.order_id in (
            <foreach collection="orderIdList" item="order_id" separator=",">
                '${order_id}'
            </foreach>
            )
        </if>
        <if test="noExistOrderCodeList != null">
            and a.order_code not in (
            <foreach collection="noExistOrderCodeList" item="order_code" separator=",">
                '${order_code}'
            </foreach>
            )
        </if>
        <if test="receiveType!=null ">
            and a.receive_type =#{receiveType}
        </if>
        <if test="receiveCode!=null and receiveCode!='' ">
            and a.receive_code =#{receiveCode}
        </if>
    </select>

    <!-- 接口-分销机构维度-总销售额 返回INT 总销售额：包含退货、不包含取消、未付款的订单-->
    <select id="selectOrderAmt" resultType="java.lang.Integer">
        SELECT SUM(b.actual_price) AS total_price FROM order_consumer_info b
        WHERE 1=1 and order_type = 1
        and b.distributor_id =#{distributorId}
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        <if test="originTypeList!=null">
            and b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
    </select>

    <!-- 接口-分销机构+当月维度-当月销售额  当月销售额：包含退货、不包含取消、未付款的订单-->
    <select id="selectByMonthAllAmt" resultType="java.lang.Integer">
        SELECT SUM(b.actual_price) AS total_price FROM order_consumer_info b
        WHERE 1=1 and order_type = 1
        and b.distributor_id = #{distributorId}
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        <if test="originTypeList!=null">
            and b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{dayBegin}
        AND b.create_time &lt;= #{dayEnd}
    </select>

    <!-- 接口-分销机构+日维度- 昨日销售额：包含退货、不包含取消、未付款的订单  -->
    <select id="selectByYesdayAllAmt" resultType="java.lang.Integer">
        SELECT SUM(b.actual_price) AS total_price FROM order_consumer_info b
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId !='' ">
            and b.distributor_id = #{distributorId}
        </if>
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        <if test="originTypeList!=null">
            and b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{dayBegin}
        AND b.create_time &lt;= #{dayEnd}
    </select>

    <!-- 接口-分销机构+当月维度-当月支付订单数   当月支付订单数：包含退货、不包含取消、未付款的订单-->
    <select id="selectByMonthAcount" resultType="java.lang.Integer">
        SELECT count(b.order_id) AS total_acount from order_consumer_info b
        WHERE
        1=1 and order_type = 1
        and b.distributor_id = #{distributorId}
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        <if test="originTypeList!=null">
            and b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{dayBegin}
        AND b.create_time &lt;= #{dayEnd}
    </select>

    <!-- 接口-分销机构+日维度-昨日支付订单数  昨日支付订单数：包含退货、不包含取消、未付款的订单-->
    <select id="selectByYesdayAcount" resultType="java.lang.Integer">
        SELECT count(b.order_id) AS total_acount from order_consumer_info b
        WHERE
        1=1 and order_type = 1
        and b.distributor_id = #{distributorId}
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        <if test="originTypeList!=null">
            and b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{dayBegin}
        AND b.create_time &lt;= #{dayEnd}
    </select>

    <!-- 接口-分销机构+当月维度-当月实收    当月实收：不包含退货、未付款、取消的订单 -->
    <select id="selectbByMonthRetailAmt" resultType="java.lang.Integer">
        SELECT CASE WHEN b.return_price IS NULL THEN a.real_amt ELSE a.real_amt-b.return_price END AS real_amt FROM (
        SELECT '1' AS create_time,SUM(actual_price) AS real_amt FROM order_consumer_info b
        WHERE 1=1 and order_type = 1
        AND b.distributor_id = #{distributorId}
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        <if test="originTypeList!=null">
            and b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{dayBegin}
        AND b.create_time &lt;= #{dayEnd}
        )a
        LEFT JOIN
        (
        SELECT '1' AS create_time,SUM(return_price)AS return_price FROM order_after_sale b
        WHERE
        1=1 AND order_type = 1
        AND b.distributor_id = #{distributorId}
        AND b.after_sale_status='3'
        <if test="originTypeList!=null">
            and b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{dayBegin}
        AND b.create_time &lt;= #{dayEnd}
        )b
        ON a.create_time = b.create_time
    </select>

    <!-- 接口-分销机构+日维度-昨日实收：不包含退货、未付款、取消的订单 -->
    <select id="selectbByYesdayRetailAmt" resultType="java.lang.Integer">

        SELECT CASE WHEN b.return_price IS NULL THEN a.real_amt ELSE a.real_amt-b.return_price END AS real_amt FROM (
        SELECT '1' AS create_time,COUNT(b.order_id) AS order_acount,SUM(actual_price) AS real_amt FROM
        order_consumer_info b
        WHERE 1=1 and order_type = 1
        AND b.distributor_id = #{distributorId}
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        <if test="originTypeList!=null">
            and b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{dayBegin}
        AND b.create_time &lt;= #{dayEnd}
        )a
        LEFT JOIN
        (
        SELECT '1' AS create_time,SUM(return_price)AS return_price FROM order_after_sale b
        WHERE
        1=1 and order_type = 1
        AND b.distributor_id = #{distributorId}
        AND b.after_sale_status='3'
        <if test="originTypeList!=null">
            and b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{dayBegin}
        AND b.create_time &lt;= #{dayEnd}
        )b
        ON a.create_time = b.create_time
    </select>

    <!-- 接口-订单概览-分销机构、小于当前日期9天内的实付金额、订单数量 -->
    <select id="selectOrderByNineDate" resultMap="selectOrderByNineDateMapping" resultType="java.util.List">
        SELECT a.`create_time` as create_time ,a.order_acount as order_count,CASE WHEN b.return_price IS NULL THEN
        a.real_amt ELSE a.real_amt-b.return_price END AS actual_price FROM (
        SELECT DATE_FORMAT(b.create_time,"%Y-%m-%d") AS create_time,COUNT(b.order_id) AS order_acount,SUM(actual_price)
        AS real_amt FROM order_consumer_info b
        WHERE 1=1 and order_type = 1
        AND b.distributor_id = #{distributorId}
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        <if test="originTypeList != null">
            AND b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{beginTime}
        GROUP BY DATE_FORMAT(b.create_time,"%Y-%m-%d")
        )a
        LEFT JOIN
        (
        SELECT DATE_FORMAT(b.create_time,"%Y-%m-%d") AS create_time,SUM(return_price)AS return_price FROM
        order_after_sale b
        WHERE
        1=1 AND order_type = 1
        AND b.after_sale_status='3'
        AND b.distributor_id = #{distributorId}
        <if test="originTypeList != null">
            AND b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{beginTime}
        GROUP BY DATE_FORMAT(b.create_time,"%Y-%m-%d")
        )b
        ON a.create_time = b.create_time
    </select>


    <!-- 接口-订单概览-分销机构、小于当前日期9周内的实付金额、订单数量 -->
    <select id="selectOrderByNineWeek" resultMap="selectOrderByNineDateMapping">
        SELECT #{any} AS create_time ,a.order_acount AS order_count,CASE WHEN b.return_price IS NULL THEN a.real_amt
        ELSE a.real_amt-b.return_price END AS actual_price FROM (
        SELECT YEARWEEK(DATE_FORMAT(b.create_time,'%Y-%m-%d')) AS create_time,COUNT(b.order_id) AS
        order_acount,SUM(actual_price) AS real_amt FROM order_consumer_info b
        WHERE 1=1 and order_type = 1
        AND b.distributor_id = #{distributorId}
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        <if test="originTypeList != null">
            AND b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND YEARWEEK(DATE_FORMAT(b.create_time,'%Y-%m-%d')) = YEARWEEK(NOW())-#{any}
        )a
        LEFT JOIN
        (
        SELECT YEARWEEK(DATE_FORMAT(b.create_time,'%Y-%m-%d')) AS create_time,SUM(return_price)AS return_price FROM
        order_after_sale b
        WHERE
        1=1 AND order_type = 1
        AND b.after_sale_status='3'
        AND b.distributor_id = #{distributorId}
        <if test="originTypeList != null">
            AND b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND YEARWEEK(DATE_FORMAT(b.create_time,'%Y-%m-%d')) = YEARWEEK(NOW())-#{any}
        )b
        ON a.create_time = b.create_time
    </select>


    <!-- 接口-订单概览-分销机构、小于当前日期9个月内的实付金额、订单数量 -->
    <select id="selectOrderByNineMonth" resultMap="selectOrderByNineDateMapping" resultType="java.util.List">
        SELECT a.`create_time` AS create_time ,a.order_acount AS order_count,CASE WHEN b.return_price IS NULL THEN
        a.real_amt ELSE a.real_amt-b.return_price END AS actual_price FROM (
        SELECT DATE_FORMAT(b.create_time,"%Y-%m") AS create_time,COUNT(b.order_id) AS order_acount,SUM(actual_price) AS
        real_amt FROM order_consumer_info b
        WHERE 1=1 and order_type = 1
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        AND b.distributor_id = #{distributorId}
        <if test="originTypeList != null">
            AND b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{beginTime}
        GROUP BY DATE_FORMAT(b.create_time,"%Y-%m")
        )a
        LEFT JOIN
        (
        SELECT DATE_FORMAT(b.create_time,"%Y-%m") AS create_time,SUM(return_price)AS return_price FROM order_after_sale
        b
        WHERE
        1=1 AND order_type = 1
        AND b.after_sale_status='3'
        AND b.distributor_id = #{distributorId}
        <if test="originTypeList != null">
            AND b.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        AND b.create_time &gt;= #{beginTime}
        GROUP BY DATE_FORMAT(b.create_time,"%Y-%m")
        )b
        ON a.create_time = b.create_time
    </select>

    <!-- 变更订单表 -->
    <update id="updateOrder">
        update order_consumer_info set update_time=CURRENT_TIMESTAMP
        <if test="payType!=null and payType!='' ">
            ,pay_type=#{payType}
        </if>
        <if test="payStatus!=null ">
            ,pay_status = #{payStatus}
        </if>
        <if test="orderStatus!=null ">
            ,order_status = #{orderStatus}
        </if>
        <if test="returnStatus!=null ">
            ,return_status=#{returnStatus}
        </if>
        <if test="businessNote!=null and businessNote!='' ">
            ,business_note=#{businessNote}
        </if>
        <if test="updateBy!=null and updateBy!='' ">
            ,update_by = #{updateBy}
        </if>
        <if test="distributorName!=null and distributorName!='' ">
            ,distributor_name = #{distributorName}
        </if>
        <if test="distributorCode!=null and distributorCode!='' ">
            ,distributor_code = #{distributorCode}
        </if>
        <if test="actualPrice!=null and actualPrice!='' ">
            ,actual_price = #{actualPrice}
        </if>
        where order_id = #{orderId}
    </update>

    <!-- 接口-收银员交班收银情况统计  获取收银员、支付类型金额 -->
    <select id="cashier" resultMap="ReceiptSumMapping" resultType="java.util.List">
        SELECT
        b.cashier_id,b.cashier_name,
        a.pay_type,SUM(b.actual_price) AS pay_price
        FROM
        order_consumer_info b
        LEFT JOIN order_pay a ON a.order_id = b.order_id
        WHERE
            b.cashier_id =#{cashierId}
        AND b.order_status NOT IN (0,4)
        AND a.pay_type IN (3,4,5,6)
        and b.distributor_id = #{distributorId}
        <if test="beginTime!=null ">
            AND b.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            AND b.create_time &lt;= #{endTime}
        </if>
        GROUP BY a.pay_type,b.cashier_id,b.cashier_name
        ORDER BY b.create_time DESC
    </select>

    <!-- 接口-收银员交班收银情况统计   获取退款金额、退款订单数、销售额、销售订单数-->
    <select id="returnByCashierSum" resultMap="ReceiptSumMapping">
        SELECT
        sum( IFNULL(a.return_price,0)) AS return_price,COUNT(a.after_sale_id) AS
        return_order_amount
        FROM
        order_after_sale a
        WHERE 1=1
        AND a.create_by =#{cashierId}
        AND a.return_money_type = 0
        <if test="beginTime!=null ">
            AND a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            AND a.create_time &lt;= #{endTime}
        </if>
        and a.distributor_id = #{distributorId}
    </select>

    <select id="returnOnlyByCashierSum" resultType="long">
        SELECT
        sum( IFNULL(a.return_price,0)) AS return_price
        FROM
        order_after_sale a

        WHERE a.create_by =#{cashierId}
        and a.return_money_type=0
        <if test="beginTime!=null ">
            AND a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            AND a.create_time &lt;= #{endTime}
        </if>
        and a.distributor_id = #{distributorId}
    </select>

    <!-- 接口-收银员交班收银情况统计 销售额、销售订单数-->
    <select id="buyByCashierSum" resultMap="ReceiptSumMapping">
        SELECT
        SUM(IFNULL(a.actual_price,0)) AS sales_amount, COUNT(a.order_id) AS sales_order_amount
        FROM
        order_consumer_info a
        LEFT JOIN order_pay c ON a.order_id = c.order_id
        WHERE
            a.cashier_id =#{cashierId}
        AND a.order_status NOT IN (0,4)
        AND c.pay_type IN (3,4,5,6)
        <if test="beginTime!=null ">
            and a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            and a.create_time &lt;= #{endTime}
        </if>
        and a.distributor_id = #{distributorId}
    </select>


    <!-- 接口-通过会员查询最后一次的消费记录. -->
    <select id="last" resultMap="LastBuyMapping" resultType="java.util.List">
         SELECT distinct a.product_name as product,b.create_time as new_consume_time FROM order_consumer_detail a,
         (SELECT order_id,create_time FROM  order_consumer_info
          WHERE
            member_id=#{memberId}
         AND order_status NOT IN ('0','4')
         AND pay_status='1'
         ORDER BY create_time DESC LIMIT 3) b 
         WHERE a.order_id = b.order_id
         LIMIT 3
    </select>

    <!-- 将提货码插入订单表中... -->
    <update id="rede">
		update order_consumer_info set receive_code=#{receiveCode},receive_time=CURRENT_TIMESTAMP
		where order_id = #{orderId} and order_status =2
	</update>

    <!-- 接口-注销提货码... -->
    <update id="reded">
		update order_consumer_info set receive_code ='@zx',receive_time=CURRENT_TIMESTAMP where order_id = #{orderId}
	</update>


    <!-- 接口-可退货的订单查询 分页 -->
    <select id="reorer" resultMap="OrderInfoMapping" resultType="java.util.List">

        SELECT a.* FROM order_consumer_info a
        LEFT JOIN (SELECT order_id,SUM(IFNULL(amount,0)) AS amount FROM order_consumer_detail GROUP BY order_id) b ON
        a.order_id
        = b.order_id
        LEFT JOIN (SELECT order_code,SUM(IFNULL(return_amount,0)) AS return_amount FROM `order_after_sale_detail` GROUP
        BY order_code) c ON a.order_code = c.order_code
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId!='' ">
            and a.distributor_id = #{distributorId}
        </if>
        <if test="orderId!=null and orderId!=''">
            and a.order_id = #{orderId}
        </if>
        <if test="orderCode!=null and orderCode!=''">
            and a.order_code = #{orderCode}
        </if>
        <if test="beginTime!=null and beginTime!='' ">
            and a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null and endTime!='' ">
            and a.create_time &lt;= #{endTime}
        </if>
        <if test="updateTime!=null  ">
            and a.update_time &gt;= #{updateTime}
        </if>
        <if test="statusList != null">
            and a.order_status in (
            <foreach collection="statusList" item="order_status" separator=",">
                '${order_status}'
            </foreach>
            )
        </if>
        AND IFNULL(b.amount,0)-IFNULL(c.return_amount,0) >0
        ORDER BY create_time DESC
        limit #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>

    <!-- 接口-可退货的订单查询 总数据量 -->
    <select id="reorerCount" resultType="java.lang.Integer">

        SELECT count(a.id) FROM order_consumer_info a
        LEFT JOIN (SELECT order_id,SUM(IFNULL(amount,0)) AS amount FROM order_consumer_detail GROUP BY order_id) b ON
        a.order_id
        = b.order_id
        LEFT JOIN (SELECT order_code,SUM(IFNULL(return_amount,0)) AS return_amount FROM `order_after_sale_detail` GROUP
        BY order_code) c ON a.order_code = c.order_code
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId!='' ">
            and a.distributor_id = #{distributorId}
        </if>
        <if test="orderId!=null and orderId!=''">
            and a.order_id = #{orderId}
        </if>
        <if test="orderCode!=null and orderCode!=''">
            and a.order_code = #{orderCode}
        </if>
        <if test="beginTime!=null and beginTime!='' ">
            and a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null and endTime!='' ">
            and a.create_time &lt;= #{endTime}
        </if>
        <if test="updateTime!=null ">
            and a.update_time &gt;= #{updateTime}
        </if>
        <if test="statusList != null">
            and a.order_status in (
            <foreach collection="statusList" item="order_status" separator=",">
                '${order_status}'
            </foreach>
            )
        </if>
        AND IFNULL(b.amount,0)-IFNULL(c.return_amount,0) >0
    </select>

    <!-- 未付款订单30分钟后自动取消 -->
    <select id="nevder" resultType="java.lang.String">
    SELECT order_id FROM order_consumer_info
    WHERE 1=1 and order_type = 1 
    AND order_status=0
    AND DATE_ADD(create_time,INTERVAL 30 MINUTE) &lt;= NOW()
    </select>

    <!-- 提货码10分钟后失效. -->
    <select id="nevred" resultType="java.lang.String">
        SELECT order_id FROM order_consumer_info
        WHERE 1=1 and order_type = 1
        AND DATE_ADD(receive_time,INTERVAL 10 MINUTE) &lt;= NOW()
        AND order_status = 2
        AND receive_code !='@zx'
    </select>

    <!-- 接口-通过当前门店,等级会员list、 统计订单使用的会员数、返回7天内的统计. -->
    <select id="devel" resultMap="DevelMapping" resultType="java.util.List">
        SELECT DATE_FORMAT(create_time,'%Y-%m-%d') AS trante,COUNT(DISTINCT(member_id)) AS acount
        FROM order_consumer_info
        WHERE 1=1 and order_type = 1
        AND distributor_id = #{distributorId}
        <if test="memberList != null">
            and member_id in (
            <foreach collection="memberList" item="member_id" separator=",">
                '${member_id}'
            </foreach>
            )
        </if>
        AND NOW() &gt;= DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 7 DAY),'%Y-%m-%d 00:00:00')
        GROUP BY DATE_FORMAT(create_time,'%Y-%m-%d') ORDER BY create_time DESC
    </select>

    <!-- 删除订单主数据 -->
    <delete id="deleteOrderInfo">
		delete from order_consumer_info WHERE order_id =#{orderId}
     </delete>


    <!-- 订单数 -->
    <select id="selectAcountByEcshop" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery"
            resultType="java.lang.Integer">
        SELECT COUNT(1) FROM order_consumer_info
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId!='' ">
            and distributor_id = #{distributorId}
        </if>
        AND create_time &gt;= #{beginTime}
        AND create_time &lt;= #{endTime}
    </select>

    <!-- 订单金额 -->
    <select id="selectAmountByEcshop" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery"
            resultType="java.lang.Integer">
        SELECT COUNT(actual_price) FROM order_consumer_info
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId!='' ">
            and distributor_id = #{distributorId}
        </if>
        AND create_time &gt;= #{beginTime}
        AND create_time &lt;= #{endTime}
    </select>

    <!-- 成交客户 -->
    <select id="selectMembersByEcshop" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery"
            resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT member_id) FROM order_consumer_info
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId!='' ">
            and distributor_id = #{distributorId}
        </if>
        AND create_time &gt;= #{beginTime}
        AND create_time &lt;= #{endTime}
    </select>

    <!--根据状态查询订单 -->
    <select id="selectCountByStatus" parameterType="com.aiqin.mgs.order.api.domain.OrderQuery"
            resultType="java.lang.Integer">
        SELECT COUNT(order_id) FROM order_consumer_info
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId!='' ">
            and distributor_id = #{distributorId}
        </if>
        <if test="orderStatus!=null ">
            and order_status = #{orderStatus}
        </if>
    </select>

    <!-- 销售目标管理-分销机构-月销售额-->
    <select id="selectDistributorMonth" resultType="java.lang.Integer">
        SELECT SUM(IFNULL(b.actual_price,0)) AS total_price FROM order_consumer_info b
        WHERE 1=1 and order_type = 1
        AND b.order_status NOT IN ('0','4')
        AND b.pay_status='1'
        <if test="distributorId!=null and distributorId!=''">
            and b.distributor_code = #{distributorId}
        </if>
        <if test="beginTime!=null ">
            and b.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            AND b.create_time &lt;= #{endTime}
        </if>
    </select>

    <!-- 会员活跃情况-通过当前门店,等级会员list、 统计订单使用的会员数、7日内 -->
    <select id="selectByMemberPayCountDay" resultType="java.lang.Integer">
         SELECT COUNT(DISTINCT member_id) AS count_member FROM order_consumer_info
         WHERE 1=1 and order_type = 1 
         AND DATE_FORMAT(create_time,"%Y-%m-%d") =#{countDate}
    </select>
    <!-- 会员活跃情况-通过当前门店,等级会员list、 统计订单使用的会员数、7周内 -->
    <select id="selectByMemberPayCountWeek" resultType="java.lang.Integer">
         SELECT COUNT(DISTINCT member_id) AS count_member FROM order_consumer_info
         WHERE 1=1 and order_type = 1
         AND YEARWEEK(DATE_FORMAT(create_time,'%Y-%m-%d')) = YEARWEEK(NOW())-#{countDate}
    </select>
    <!-- 会员活跃情况-通过当前门店,等级会员list、 统计订单使用的会员数、7月内 -->
    <select id="selectByMemberPayCountMonth" resultType="java.lang.Integer">
         SELECT COUNT(DISTINCT member_id) AS count_member FROM order_consumer_info
         WHERE 1=1 and order_type = 1
         AND DATE_FORMAT(create_time,"%Y-%m") = #{countDate}
    </select>

    <!-- 判断会员是否在当前门店时候有过消费记录 -->
    <select id="selectMemberByDistributor" resultType="java.lang.String">
        SELECT
        DISTINCT member_id FROM order_consumer_info
        WHERE 1=1 and order_type = 1
        <if test="distributorId!=null and distributorId!='' ">
            AND Distributor_id =#{distributorId}
        </if>
        <if test="memberList != null">
            and member_id in (
            <foreach collection="memberList" item="member_id" separator=",">
                '${member_id}'
            </foreach>
            )
        </if>
    </select>
    <!-- 查询未统计销量的已完成订单  -->
    <select id="selectsukReturn" resultType="java.lang.String">
         SELECT order_id FROM order_consumer_info
          WHERE 1=1 AND order_type = 1
            AND order_status IN ('0','4')
            AND suk_return IS NULL
            AND create_time &gt;= #{beginTime}
            AND create_time &lt;= #{endTime}
    </select>

    <!-- 修改统计销量状态 -->
    <update id="updateSukReturn" parameterType="java.lang.String">
        update order_consumer_info set suk_return=1 where 1=1
        <if test="_parameter!=null and _parameter!=''">
            and order_id = #{_parameter,jdbcType=VARCHAR}
        </if>
    </update>

    <!--营业数据统计-->
    <select id="statisticalBusiness"
            parameterType="com.aiqin.mgs.order.api.domain.request.statistical.BusinessStatisticalRequest"
            resultMap="resultStatisticalBusiness">
        select sum(actual_price) as total_paid_price,
        count(*) as amount,
        date_format(create_time,'%Y-%m') as date_tag
        from order_consumer_info where 1=1
        <if test="distributorId!=null">
            and distributor_id = #{distributorId}
        </if>
        <if test="startDate!=null">
            and create_time &gt;= #{startDate}
        </if>
        <if test="endDate!=null">
            and create_time &lt;= #{endDate}
        </if>
        and order_status in(1,2,3,5,6)
        <if test="groupByFlag!=null">
            group by date_tag
            order by create_time asc
        </if>
    </select>

    <!--获取指定时间内有销售数据的门店id集合-->
    <select id="querySaleDistributor" resultType="string">
        select distinct distributor_id from order_consumer_info
        where 1=1
        <if test="startDate!=null">
            and create_time &gt;= #{startDate}
        </if>
        <if test="endDate!=null">
            and create_time &lt;= #{endDate}
        </if>
        and order_status in(1,2,3,5,6)
    </select>

    <!--获取指定门店指定时间段内销量前10的sku的集合-->
    <select id="queryTop10SaleSku" resultType="string">
        select b.sku_code from
        (select order_id from order_consumer_info
        where 1=1
        <if test="distributorId!=null">
            and distributor_id = #{distributorId}
        </if>
        <if test="startDate!=null">
            and create_time &gt;= #{startDate}
        </if>
        <if test="endDate!=null">
            and create_time &lt;= #{endDate}
        </if>
        and order_status in(1,2,3,5,6)
        ) a
        left join order_consumer_detail b on a.order_id=b.order_id
        group by b.sku_code
        order by count(b.sku_code) desc
        limit 0,10
    </select>

    <!--获取指定门店指定时间段内销量大于等于num的sku的集合-->
    <select id="querySaleSkuGtNum" resultType="string">
        select b.sku_code from
        (select order_id from order_consumer_info
        where 1=1
        <if test="distributorId!=null">
            and distributor_id = #{distributorId}
        </if>
        <if test="startDate!=null">
            and create_time &gt;= #{startDate}
        </if>
        <if test="endDate!=null">
            and create_time &lt;= #{endDate}
        </if>
        and order_status in(1,2,3,5,6)
        ) a
        left join order_consumer_detail b on a.order_id=b.order_id
        group by b.sku_code
        having count(b.sku_code) &gt;= #{num}
    </select>
    <select id="querySaleSkuCount" resultType="integer">
        select count(d.id) from
        order_consumer_detail d,order_consumer_info o
        where
        d.order_id=o.order_id
       and  o.distributor_id = #{distributorId}
        and d.create_time &gt;= #{startDate}
        and d.sku_code = #{skuCode}

    </select>

    <select id="orderPrestorageCount" resultType="integer">
        select sum(o.actual_price) from
        order_consumer_detail d,order_consumer_info o
        where
        d.order_id=o.order_id
       and  o.distributor_id = #{storeId}
        and d.create_time &gt;= #{startDate}
        and d.create_time &lt;= #{endDay}
        and o.order_type = 4
        and o.order_status in (2,5)
    </select>
    <select id="orderStoreCount" resultType="integer">
         select sum(o.actual_price) from
        order_consumer_detail d,order_consumer_info o
        where
        d.order_id=o.order_id
       and  o.distributor_id = #{storeId}
        and d.create_time &gt;= #{startDate}
        and d.create_time &lt;= #{endDay}
        and (o.order_type = 1  or o.order_type = 3 )
        and o.order_status =5
    </select>
    <!--获取特定sku集合指定时间段内销量数据信息-->
    <select id="querySkuSale" parameterType="com.aiqin.mgs.order.api.domain.request.statistical.SkuSalesRequest"
            resultType="com.aiqin.mgs.order.api.domain.statistical.SkuSales">
        select b.sku_code as skuCode,count(b.sku_code) as sales from
        (select order_id from order_consumer_info
        where 1=1
        <if test="distributorId!=null">
            and distributor_id = #{distributorId}
        </if>
        <if test="startDate!=null">
            and create_time &gt;= #{startDate}
        </if>
        <if test="endDate!=null">
            and create_time &lt;= #{endDate}
        </if>
        and order_status in(1,2,3,5,6)
        ) a
        left join order_consumer_detail b on a.order_id=b.order_id
        where 1=1
        <if test="skuCodes != null">
            and b.sku_code in (
            <foreach collection="skuCodes" item="item" separator=",">
                #{item,jdbcType=VARCHAR}
            </foreach>
            )
        </if>
    </select>

    <select id="queryLast10DaysOrderStatistical"
            resultType="com.aiqin.mgs.order.api.domain.response.statistical.Last10DaysOrderStatistical">
        select date_format(create_time,'%Y-%m-%d') as dateTag,count(*) as finishOrderNum
        from order_consumer_info
        where distributor_id = #{distributorId}
        and create_time &gt;= #{startDate}
        and create_time &lt;= #{endDate}
        and order_status = 5
        group by date_format(create_time,'%Y-%m-%d')
        order by create_time desc
    </select>
    <select id="isExistOrder" resultType="java.lang.String">
        SELECT DATE_FORMAT(create_time,'%Y-%m-%d') AS create_time
        FROM order_consumer_info
        WHERE distributor_id = #{distributorId}
        ORDER BY create_time LIMIT 1
    </select>

    <select id="memberLately" resultMap="LatelyResponse"
            resultType="java.util.List">
        SELECT create_time AS pay_time,actual_price as price FROM `order_consumer_info`
        WHERE 1=1
        <if test="distributorId!=null">
            and distributor_id = #{distributorId}
        </if>
        <if test="memberId!=null and memberId!=''">
            and member_id =#{memberId}
        </if>
        GROUP BY create_time
        ORDER BY create_time DESC LIMIT 3
    </select>

    <!-- 根据条件查询订单列表 -->
    <select id="findOrderInfoList" parameterType="com.aiqin.mgs.order.api.domain.OrderInfo"
            resultMap="OrderInfoMapping"
            resultType="java.util.List">
        SELECT a.*
        FROM order_info a
        WHERE 1 = 1
        <if test="orderType != null and orderType != '' or orderType == 0">
            and a.order_type = #{orderType,jdbcType=VARCHAR}
        </if>
        <if test="orderStatus != null and orderStatus != '' or orderStatus == 0">
            and a.order_status = #{orderStatus,jdbcType=VARCHAR}
        </if>
        <if test="payStatus != null and payStatus != '' or payStatus == 0">
            and a.pay_status = #{payStatus,jdbcType=VARCHAR}
        </if>
        <if test="orderCode != null and orderCode != ''">
            and a.order_code like concat('%',#{orderCode,jdbcType=VARCHAR},'%')
        </if>
        <if test="distributorName != null and distributorName != ''">
            and a.distributor_name like concat('%',#{distributorName,jdbcType=VARCHAR},'%')
        </if>
        <if test="createTimeBegin != null and createTimeBegin != ''">
            and date_format(a.create_time,'%Y-%m-%d') &gt;= #{createTimeBegin,jdbcType=VARCHAR}
        </if>
        <if test="createTimeEnd != null and createTimeEnd != ''">
            and date_format(a.create_time,'%Y-%m-%d') &lt;= #{createTimeEnd,jdbcType=VARCHAR}
        </if>
        ORDER BY a.create_time DESC
    </select>
    <select id="selectListByQueryVO" resultType="com.aiqin.mgs.order.api.domain.response.order.QueryOrderListRespVO">
        select order_store_code orderCode, order_type_name orderType, customer_name customerName,
        transport_center_name transportCenterName, warehouse_name warehouseName, supplier_name supplierName,
        order_status orderStatus, create_time createTime, create_by_name createByName,
        update_by_name updateByName, update_time updateTime,
        total_product_amount totalProductAmount, actual_product_count actualProductCount,
        actual_total_product_amount actualTotalProductAmount
        from order_store_info
        <where>
            <if test="orderType != null">
                and order_type_code = #{orderType}
            </if>
            <if test="companyCode != null">
                and company_code = #{companyCode}
            </if>
            <if test="createDateStart != null">
                and create_time &gt;=#{createDateStart,jdbcType=TIMESTAMP}
            </if>
            <if test="createDateEnd != null">
                and create_time &lt;=#{createDateEnd,jdbcType=TIMESTAMP}
            </if>
            <if test="orderStatus != null and orderStatus != ''">
                and order_status = #{orderStatus}
            </if>
            <if test="transportCenterCode != null and transportCenterCode != ''">
                and transport_center_code = #{transportCenterCode}
            </if>
            <if test="warehouseCode != null and warehouseCode != ''">
                and warehouse_code = #{warehouseCode}
            </if>
            <if test="supplierCode != null and supplierCode != ''">
                and supplier_code = #{supplierCode}
            </if>
            <if test="customerName != null and customerName != ''">
                and customer_name like CONCAT(#{customerName},'%')
            </if>
            <if test="orderCode != null and orderCode != ''">
                and order_store_code LIKE CONCAT(#{orderCode},'%')
            </if>
            <if test="orderLock != null">
                and order_lock = #{orderLock}
            </if>
            <if test="orderException != null">
                and order_exception = #{orderException}
            </if>
        </where>
        order by create_time desc
    </select>
    <resultMap id="selectByOrderCode" type="com.aiqin.mgs.order.api.domain.response.order.QueryOrderInfoRespVO">
        <result column="aorder_code" jdbcType="VARCHAR" property="orderCode"/>
        <result column="aorder_status" jdbcType="INTEGER" property="orderStatus"/>
        <result column="aorder_lock" jdbcType="INTEGER" property="orderLock"/>
        <result column="aorder_exception" jdbcType="INTEGER" property="orderException"/>
        <result column="apayment_status" jdbcType="INTEGER" property="paymentStatus"/>
        <result column="apayment_name" jdbcType="VARCHAR" property="paymentName"/>
        <result column="aorder_type_name" jdbcType="VARCHAR" property="orderTypeName"/>
        <result column="aorder_category_code" jdbcType="VARCHAR" property="orderCategoryCode"/>
        <result column="aorder_category_name" jdbcType="VARCHAR" property="orderCategoryName"/>
        <result column="amain_order_code" jdbcType="VARCHAR" property="mainOrderCode"/>
        <result column="aorder_level" jdbcType="INTEGER" property="orderLevel"/>
        <result column="asupplier_name" jdbcType="VARCHAR" property="supplierName"/>
        <result column="atransport_center_name" jdbcType="VARCHAR" property="transportCenterName"/>
        <result column="awarehouse_name" jdbcType="VARCHAR" property="warehouseName"/>
        <result column="ainvoice_type" jdbcType="VARCHAR" property="invoiceType"/>
        <result column="ainvoice_title" jdbcType="VARCHAR" property="invoiceTitle"/>
        <result column="atransport_company_code" jdbcType="VARCHAR" property="transportCompanyCode"/>
        <result column="atransport_company_name" jdbcType="VARCHAR" property="transportCompanyName"/>
        <result column="atransport_code" jdbcType="VARCHAR" property="transportCode"/>
        <result column="apayment_time" jdbcType="TIMESTAMP" property="paymentTime"/>
        <result column="adelivery_time" jdbcType="TIMESTAMP" property="deliveryTime"/>
        <result column="atransport_time" jdbcType="TIMESTAMP" property="transportTime"/>
        <result column="areceive_time" jdbcType="TIMESTAMP" property="receiveTime"/>
        <result column="aremake" jdbcType="VARCHAR" property="remake"/>
        <result column="acreate_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="aupdate_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="acreate_by_name" jdbcType="VARCHAR" property="createByName"/>
        <result column="aupdate_by_name" jdbcType="VARCHAR" property="updateByName"/>
        <result column="acustomer_code" jdbcType="VARCHAR" property="customerCode"/>
        <result column="acustomer_name" jdbcType="VARCHAR" property="customerName"/>
        <result column="adistribution_mode_name" jdbcType="VARCHAR" property="distributionModeName"/>
        <result column="areceive_person" jdbcType="VARCHAR" property="receivePerson"/>
        <result column="areceive_mobile" jdbcType="VARCHAR" property="receiveMobile"/>
        <result column="azip_code" jdbcType="VARCHAR" property="zipCode"/>
        <result column="aprovince_name" jdbcType="VARCHAR" property="provinceName"/>
        <result column="acity_name" jdbcType="VARCHAR" property="cityName"/>
        <result column="adistrict_name" jdbcType="VARCHAR" property="districtName"/>
        <result column="adetail_address" jdbcType="VARCHAR" property="detailAddress"/>
        <result column="aactual_product_count" jdbcType="DECIMAL" property="actualProductCount"/>
        <result column="atotal_volume" jdbcType="BIGINT" property="totalVolume"/>
        <result column="atotal_weight" jdbcType="BIGINT" property="totalWeight"/>
        <result column="aactual_total_volume" jdbcType="BIGINT" property="actualTotalVolume"/>
        <result column="aactual_total_weight" jdbcType="BIGINT" property="actualTotalWeight"/>
        <result column="atotal_product_amount" jdbcType="DECIMAL" property="totalProductAmount"/>
        <result column="aorder_amount" jdbcType="DECIMAL" property="orderAmount"/>
        <result column="adeliver_amount" jdbcType="DECIMAL" property="deliverAmount"/>
        <result column="aactual_total_product_amount" jdbcType="DECIMAL" property="actualTotalProductAmount"/>
        <result column="adiscount_amount" jdbcType="DECIMAL" property="discountAmount"/>
        <result column="asuit_coupon_money" jdbcType="DECIMAL" property="suitCouponMoney"/>
        <result column="atop_coupon_money" jdbcType="DECIMAL" property="topCouponMoney"/>
        <result column="aactual_order_amount" jdbcType="DECIMAL" property="actualOrderAmount"/>
        <result column="aactivity_money" jdbcType="DECIMAL" property="activityDiscount"/>
        <collection property="productList"
                    ofType="com.aiqin.mgs.order.api.domain.response.order.QueryOrderInfoItemRespVO">
            <result column="bsku_code" jdbcType="VARCHAR" property="skuCode"/>
            <result column="bsku_name" jdbcType="VARCHAR" property="skuName"/>
            <result column="bpicture_url" jdbcType="VARCHAR" property="pictureUrl"/>
            <result column="bspec" jdbcType="VARCHAR" property="spec"/>
            <result column="bcolor_name" jdbcType="VARCHAR" property="colorName"/>
            <result column="bmodel" jdbcType="VARCHAR" property="model"/>
            <result column="bunit_name" jdbcType="VARCHAR" property="unitName"/>
            <result column="bzero_disassembly_coefficient" jdbcType="INTEGER" property="zeroDisassemblyCoefficient"/>
            <result column="bproduct_type" jdbcType="INTEGER" property="productType"/>
            <result column="bproduct_amount" jdbcType="DECIMAL" property="productAmount"/>
            <result column="bpurchase_amount" jdbcType="DECIMAL" property="purchaseAmount"/>
            <result column="bproduct_count" jdbcType="BIGINT" property="productCount"/>
            <result column="btotal_product_amount" jdbcType="VARCHAR" property="totalProductAmount"/>
            <result column="bactual_product_count" jdbcType="DECIMAL" property="actualProductCount"/>
            <result column="btotal_preferential_amount" jdbcType="DECIMAL" property="totalPreferentialAmount"/>
            <result column="btotal_acivity_amount" jdbcType="DECIMAL" property="totalAcivityAmount"/>
            <result column="bactivity_code" jdbcType="VARCHAR" property="activityCode"/>
            <result column="bgift_line_code" jdbcType="VARCHAR" property="giftLineCode"/>
            <result column="breturn_product_count" jdbcType="BIGINT" property="returnProductCount"/>
            <result column="btotal_purchase_amount" jdbcType="DECIMAL" property="totalPurchaseAmount"/>
            <result column="bactual_total_product_amount" jdbcType="DECIMAL" property="actualTotalProductAmount"/>
            <result column="bactual_total_purchase_amount" jdbcType="DECIMAL" property="actualTotalPurchaseAmount"/>
        </collection>
        <!--<collection property="batchList" ofType="com.aiqin.mgs.order.api.domain.response.order.QueryOrderInfoItemBatchRespVO">-->
        <!--<result column="dsku_code" jdbcType="VARCHAR" property="skuCode" />-->
        <!--<result column="dsku_name" jdbcType="VARCHAR" property="skuName" />-->
        <!--<result column="ddbatch_code" jdbcType="VARCHAR" property="batchCode" />-->
        <!--<result column="dproduct_date" jdbcType="TIMESTAMP" property="productDate" />-->
        <!--<result column="dbatch_remark" jdbcType="VARCHAR" property="batchRemark" />-->
        <!--<result column="dproduct_count" jdbcType="BIGINT" property="productCount" />-->
        <!--<result column="dactual_product_count" jdbcType="BIGINT" property="actualProductCount" />-->
        <!--</collection>-->
    </resultMap>
    <resultMap id="selectLogByOrderCode" type="com.aiqin.mgs.order.api.domain.OperationLog">
        <result column="ooperation_type" jdbcType="INTEGER" property="operationType"/>
        <result column="ooperation_content" jdbcType="VARCHAR" property="operationContent"/>
        <result column="oremark" jdbcType="VARCHAR" property="remark"/>
        <result column="ocreate_by_name" jdbcType="VARCHAR" property="createByName"/>
        <result column="ocreate_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <select id="selectByOrderCode" resultMap="selectByOrderCode">
      select
        a.order_store_code aorder_code, a.order_status aorder_status, a.order_lock aorder_lock,
        a.order_exception aorder_exception, a.payment_status apayment_status, a.payment_name apayment_name,
        a.order_type_name aorder_type_name, a.order_category_code aorder_category_code, a.order_category_name aorder_category_name,
        a.order_level aorder_level,a.main_order_code amain_order_code, a.supplier_name asupplier_name,
        a.transport_center_name atransport_center_name, a.warehouse_name awarehouse_name,
        a.invoice_type ainvoice_type, a.invoice_title ainvoice_title, a.transport_code atransport_code,
        a.transport_company_code atransport_company_code, a.transport_company_name atransport_company_name,
        a.payment_time apayment_time, a.delivery_time adelivery_time, a.transport_time atransport_time,
        a.receive_time areceive_time, a.create_time acreate_time, a.remake aremake, a.update_time aupdate_time,
        a.create_by_id acreate_by_id, a.create_by_name acreate_by_name, a.update_by_id aupdate_by_id,
        a.update_by_name aupdate_by_name,
        a.customer_code acustomer_code, a.customer_name acustomer_name, a.distribution_mode_name adistribution_mode_name,
        a.receive_person areceive_person, a.receive_mobile areceive_mobile, a.zip_code azip_code,
        a.province_name aprovince_name, a.city_name acity_name, a.district_name adistrict_name,
        a.receive_address adetail_address,
        a.actual_product_count aactual_product_count, a.total_volume atotal_volume, a.total_weight atotal_weight,
        a.actual_total_volume aactual_total_volume, a.actual_total_weight aactual_total_weight,
        a.total_product_amount atotal_product_amount, a.order_amount aorder_amount,
        a.actual_total_product_amount aactual_total_product_amount,

        b.sku_code bsku_code, b.sku_name bsku_name, b.picture_url bpicture_url,
        b.product_spec bspec, b.color_name bcolor_name, b.model_code bmodel, b.unit_name bunit_name,
        b.zero_disassembly_coefficient bzero_disassembly_coefficient, b.product_type bproduct_type,
        ifnull(b.product_amount, 0) bproduct_amount, ifnull(b.purchase_amount, 0) bpurchase_amount,
        sum(ifnull(b.product_count, 0)) bproduct_count, sum(ifnull(b.actual_product_count, 0)) bactual_product_count,
        sum(b.total_product_amount) bamount, sum(b.total_product_amount) btotal_product_amount,
        sum(b.total_preferential_amount) btotal_preferential_amount,
        sum(b.total_acivity_amount) btotal_acivity_amount, b.activity_code bactivity_code,
        b.gift_line_code bgift_line_code, b.return_product_count breturn_product_count,
        sum(ifnull(b.product_count * b.purchase_amount, 0)) btotal_purchase_amount,
        sum(ifnull(b.actual_product_count * b.product_amount, 0)) bactual_total_product_amount,
        sum(ifnull(b.actual_product_count * b.purchase_amount, 0)) bactual_total_purchase_amount,

        f.suit_coupon_money asuit_coupon_money, f.top_coupon_money atop_coupon_money,
        f.total_money aactual_total_product_amount, f.pay_money aactual_order_amount,
        f.activity_money aactivity_money, l.logistics_fee adeliver_amount

--         d.sku_code dsku_code, d.sku_name dsku_name, d.batch_code dbatch_code,
--         d.product_date dproduct_date, d.batch_remark dbatch_remark,
--         d.product_count dproduct_count, d.actual_product_count dactual_product_count

        from order_store_info a
        left join order_store_detail b on a.order_store_code = b.order_store_code
        left join order_store_fee f on f.fee_id = a.fee_id
        left join order_store_logistics l on l.logistics_id = a.logistics_id
--         left join order_store_detail_batch d on d.order_store_code = a.order_store_code
        where a.order_store_code = #{orderCode}
        group by sku_code,batch_info_code,a.order_store_code
    </select>
    <select id="orderProductBySum" resultType="java.lang.Long">
      select sum(product_count) from order_store_detail
      where order_store_code = #{orderStoreCode}
    </select>
    <select id="orderProductBatchByOrder"
            resultType="com.aiqin.mgs.order.api.domain.response.returngoods.ReturnOrderInfoItemBatchRespVO">
      select
      line_code lineCode, sku_code skuCode, sku_name skuName,batch_code batchCode, batch_info_code batchInfoCode, supplier_code supplierCode, supplier_name supplierName,
      product_count returnProductCount, actual_inbound_count actualReturnProductCount, return_product_count returnTotalCount,
      batch_date productDate
      from order_store_detail
      where order_store_code = #{orderStoreCode}
    </select>
    <select id="orderProductLogByOrder" resultMap="selectLogByOrderCode">
        select
         o.operation_type ooperation_type, o.operation_content ooperation_content,
        o.remark oremark, o.create_by_name ocreate_by_name, o.create_time ocreate_time
        from operation_log o
        where o.source_type = 0 and o.operation_code = #{orderCode}
    </select>
    <select id="findListByOrderCode" resultType="com.aiqin.mgs.order.api.domain.OrderInfo">
        SELECT
        order_code orderCode,
        order_id orderId,
        order_type orderType
        FROM
        order_consumer_info
        WHERE
        order_code IN (  <foreach collection="orderCodeList" item="item" separator=",">
        #{item,jdbcType=VARCHAR}
    </foreach>);
    </select>
    <select id="selectGetMoney"
            resultType="com.aiqin.mgs.order.api.domain.response.stock.ReportForDayResponse">
        SELECT
            a.cashier_id cashierId,
            a.cashier_name cashierName,
            a.pay_type payType,
            COUNT(1) saleCount,
            SUM( a.actual_price ) AS price
        FROM
            order_consumer_info a
        WHERE
            a.order_status NOT IN ( 0, 4 )
          and a.distributor_id = #{distributorId}
          AND a.pay_type IN (3,4,5,6)
          AND a.create_time &gt;= #{startTime}
          AND a.create_time &lt;= #{endTime}
          and a.cashier_id in
            (<foreach collection="cashierIdList" item="item" separator=",">
            #{item}
            </foreach>)
        GROUP BY
            a.pay_type,
            a.cashier_id
    </select>
    <select id="selectReturnMoney"
            resultType="com.aiqin.mgs.order.api.domain.response.stock.ReportForDayResponse">
        SELECT
        sum( IFNULL(a.return_price,0)) AS price,
        count(1) returnCount,
        create_by cashierId
        FROM
        order_after_sale a
        WHERE
            a.create_time &gt;= #{startTime}
        AND a.create_time &lt;= #{endTime}
        and a.create_by in
        (<foreach collection="cashierIdList" item="item" separator=",">
        #{item}
        </foreach>)
        and a.return_money_type = 0
        and a.distributor_id = #{distributorId}
        GROUP BY a.create_by;
    </select>
    <select id="selectPointRecord"
            resultType="com.aiqin.mgs.order.api.domain.response.stock.ReportForDayResponse">
        SELECT
        a.create_by cashierId,
        sum( a.cost_points ) jiFenGet,
        SUM( a.receive_points ) jiFenReturn
        FROM
        order_consumer_detail a,
        order_consumer_info b
        WHERE
        a.create_time &gt;= #{startTime}
        AND a.create_time &lt;= #{endTime}
        and a.create_by in
        (<foreach collection="cashierIdList" item="item" separator=",">
        #{item}
    </foreach>)
        AND a.order_id = b.order_id
        and b.distributor_id = #{distributorId}
        GROUP BY
        a.create_by
    </select>
    <select id="findListBySaleCode" resultType="com.aiqin.mgs.order.api.domain.OrderInfo">
        SELECT
        after_sale_code orderCode,
        after_sale_id orderId
        FROM
        order_after_sale
        WHERE
        after_sale_code IN (  <foreach collection="orderCodeList" item="item" separator=",">
        #{item,jdbcType=VARCHAR}
    </foreach>);
    </select>
    <select id="selectOrderBySettlementType"
            resultType="com.aiqin.mgs.order.api.domain.response.stock.AmountDetailsResponse">
        SELECT
        o.order_id orderId,
        o.order_code orderCode,
        o.actual_price thisAmount,
        o.order_type orderType,
        o.pay_type payType,
        SUM(b.cost_points) jiFenDeduction
        FROM
            order_consumer_info o LEFT JOIN order_consumer_detail b ON o.order_id = b.order_id
        WHERE
        o.cashier_id = #{cashierId}
        and o.distributor_id = #{distributorId}
        and o.order_status NOT IN ( 0, 4 )
        AND o.create_time &gt;= #{startTime}
        AND o.create_time &lt;= #{endTime}
        <if test="settlementType !=7">
            AND o.pay_type = #{settlementType}
        </if>
        GROUP BY o.id
        <if test="settlementType ==7">
            HAVING jiFenDeduction > 0
        </if>
    </select>
    <select id="costAndSalesByCategory" resultType="com.aiqin.mgs.order.api.domain.response.CostAndSalesResp">
        SELECT
            left(type_id,#{productCategory}) code,

            sum( amount ) saleProductNum,
            sum( d.total_price ) totalAmount,
            sum( cost_price )  productCost
        FROM
            order_consumer_detail d,
            order_consumer_info o
        WHERE
            o.order_id = d.order_id
            <if test="beginTime !=null">
                AND o.create_time &gt;= #{beginTime}
            </if>
            <if test="endTime !=null">
                AND o.create_time &lt;= #{endTime}
            </if>
            AND o.distributor_id = #{distributorId}
            AND o.pay_status = 1  and o.order_type!=3

            group by left(type_id,#{productCategory})
        limit #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>
    <select id="costAndSalesSum" resultType="com.aiqin.mgs.order.api.domain.response.CostAndSalesSumResp">
        SELECT a.saleAllNum,a.totalAmount,a.productAllCost,b.totalReturnAmount,b.totalReturnPrice from(
        SELECT
        sum( amount ) saleAllNum,
        sum( d.total_price ) totalAmount,
        sum( cost_price * amount )  productAllCost
        FROM
        order_consumer_detail d,
        order_consumer_info o
        WHERE
        o.order_id = d.order_id
        <if test="beginTime !=null">
            AND o.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime !=null">
            AND o.create_time &lt;= #{endTime}
        </if>
        AND o.distributor_id = #{distributorId}

        <if test="productPropertyCode !=null and productPropertyCode!=''">
            and   product_property_code  =#{productPropertyCode}
        </if>
        <if test="brandId !=null and brandId!=''">
            and   d.brand_id  =#{brandId}
        </if>
        <if test="skuCode !=null and skuCode!=''">
            and d.sku_code  =#{skuCode}

        </if>
        <if test="skuName !=null and skuName!=''">

            and d.sku_name =#{skuName}
        </if>
        <if test="cashierId !=null and cashierId !=''">
            and o.cashier_id =#{cashierId}
        </if>
        AND o.pay_status = 1 and o.order_type!=3) a,
        (SELECT
        sum( return_price ) totalReturnPrice,
        sum(a.return_amount) totalReturnAmount
        FROM
        order_consumer_detail d,
        order_consumer_info o,
        order_after_sale_detail a
        WHERE
        o.order_id = d.order_id
        and  a.order_detail_id = d.order_detail_id

        <if test="beginTime !=null">
            AND a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime !=null">
            AND a.create_time &lt;= #{endTime}
        </if>
        AND o.distributor_id = #{distributorId}

        <if test="productPropertyCode !=null and productPropertyCode!=''">
            and   product_property_code  =#{productPropertyCode}
        </if>
        <if test="brandId !=null and brandId!=''">
            and   d.brand_id  =#{brandId}
        </if>
        <if test="skuCode !=null and skuCode!=''">
            and d.sku_code  =#{skuCode}

        </if>
        <if test="skuName !=null and skuName!=''">

            and d.sku_name =#{skuName}
        </if>
        <if test="cashierId !=null and cashierId !=''">
            and o.cashier_id =#{cashierId}
        </if>
       )b
    </select>

    <select id="costAndSalesByCategory0" resultType="com.aiqin.mgs.order.api.domain.response.CostAndSalesResp">
        select  * FROM
        (SELECT
        <if test="productCategory !=null and productCategory==0">
            d.type_id code,
        </if>
        <if test="productCategory !=null and productCategory!=0">
            left(d.type_id,#{productCategory}) code,
        </if>
        <if test="productPropertyCode !=null">
            product_property_code code,
            product_property_name as name,
        </if>
        <if test="brandId !=null">
            d.brand_id code,
            d.brand_name as name,
        </if>
        <if test="skuCode !=null or skuName!=null">
            d.sku_code code,
            d.sku_name as name,
        </if>
        <if test="cashierId !=null">
            o.guide_id code,
            o.guide_name as name,
        </if>

        sum( amount ) saleProductNum,
        sum( d.total_price ) totalAmount,
        sum( cost_price * amount) productCost,
        sum( d.cost_points) costPoints
        FROM
        order_consumer_detail d,
        order_consumer_info o
        WHERE
        o.order_id = d.order_id
        <if test="beginTime !=null">
            AND o.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime !=null">
            AND o.create_time &lt;= #{endTime}
        </if>
        AND o.distributor_id = #{distributorId}
        <if test="productPropertyCode !=null and productPropertyCode!=''">
            and product_property_code =#{ productPropertyCode}
        </if>
        <if test="brandId !=null and brandId!=''">
            and d. brand_id =#{ brandId}
        </if>
        <if test="skuCode !=null and skuCode!=''">
            and d.sku_code =#{ skuCode}

        </if>
        <if test="skuName !=null and skuName!=''">

            and d.sku_name =#{skuName}
        </if>
        <if test="cashierId !=null and cashierId !=''">
            and o.guide_id =#{cashierId}
        </if>
        AND o.order_status not in (0,4) and o.order_type!=3
        group by
        <if test="productCategory !=null and productCategory==0">
            d.type_id
        </if>
        <if test="productCategory !=null and productCategory!=0">
            left(d.type_id,#{productCategory})
        </if>
        <if test="productPropertyCode !=null">
            product_property_code
        </if>
        <if test="brandId !=null">
            d.brand_id,d.brand_name
        </if>
        <if test="skuCode !=null or skuName!=null">
            d.sku_code ,
            d.sku_name
        </if>
        <if test="cashierId !=null">

            o.guide_id ,
            o.guide_name
        </if>
        union
        SELECT
        <if test="productCategory !=null and productCategory==0">
            d.type_id code,
        </if>
        <if test="productCategory !=null and productCategory!=0">
            left(d.type_id,#{productCategory}) code,
        </if>
        <if test="productPropertyCode !=null">
            product_property_code code,
            product_property_name as name,
        </if>
        <if test="brandId !=null">
            d.brand_id code,
            d.brand_name as name,
        </if>
        <if test="skuCode !=null or skuName!=null">
            d.sku_code code,
            d.sku_name as name,
        </if>
        <if test="cashierId !=null">
            o.guide_id code,
            o.guide_name as name,
        </if>
        - sum( a.return_amount  ) saleProductNum,
       - sum( a.return_price ) totalAmount,
        - sum( cost_price * a.return_amount ) productCost,
         0 costPoints
        FROM
        order_consumer_detail d,
        order_consumer_info o,
        order_after_sale_detail a
        WHERE
        o.order_id = d.order_id
        and a. order_detail_id = d.order_detail_id
        <if test="beginTime !=null">
            AND a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime !=null">
            AND a.create_time &lt;= #{endTime}
        </if>
        AND o.distributor_id = #{distributorId}
        <if test="productPropertyCode !=null and productPropertyCode!=''">
            and product_property_code =#{ productPropertyCode}
        </if>
        <if test="brandId !=null and brandId!=''">
            and d. brand_id =#{ brandId}
        </if>
        <if test="skuCode !=null and skuCode!=''">
            and d.sku_code =#{ skuCode}

        </if>
        <if test="skuName !=null and skuName!=''">

            and d.sku_name =#{skuName}
        </if>
        <if test="cashierId !=null and cashierId !=''">
            and o.guide_id =#{cashierId}
        </if>

        group by
        <if test="productCategory !=null and productCategory==0">
            d.type_id
        </if>
        <if test="productCategory !=null and productCategory!=0">
            left(d.type_id,#{productCategory})
        </if>
        <if test="productPropertyCode !=null">
            product_property_code
        </if>
        <if test="brandId !=null">
            d.brand_id,d.brand_name
        </if>
        <if test="skuCode !=null or skuName!=null">
            d.sku_code ,
            d.sku_name
        </if>
        <if test="cashierId !=null">

            o.guide_id ,
            o.guide_name
        </if>
  )as t

    </select>
    <select id="costAndSalesByCategory0Count" resultType="long">
        select count(* ) FROM (SELECT
        <if test="productCategory !=null and productCategory==0">
            d.type_id code,
        </if>
        <if test="productCategory !=null and productCategory!=0">
            left(d.type_id,#{productCategory}) code,
        </if>
        <if test="productPropertyCode !=null">
            product_property_code code,
            product_property_name as name,
        </if>
        <if test="brandId !=null">
            d.brand_id code,
            d.brand_name as name,
        </if>
        <if test="skuCode !=null or skuName!=null">
            d.sku_code code,
            d.sku_name as name,
        </if>
        <if test="cashierId !=null">
            o.cashier_id code,
            o.cashier_name as name,
        </if>

        sum( amount ) saleProductNum,
        sum( d.total_price ) totalAmount,
        sum( cost_price ) productCost
        FROM
        order_consumer_detail d,
        order_consumer_info o
        WHERE
        o.order_id = d.order_id
        <if test="beginTime !=null">
            AND o.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime !=null">
            AND o.create_time &lt;= #{endTime}
        </if>
        AND o.distributor_id = #{distributorId}
        <if test="productPropertyCode !=null and productPropertyCode!=''">
            and product_property_code =#{ productPropertyCode}
        </if>
        <if test="brandId !=null and brandId!=''">
            and d. brand_id =#{ brandId}
        </if>
        <if test="skuCode !=null and skuCode!=''">
            and d.sku_code =#{ skuCode}

        </if>
        <if test="skuName !=null and skuName!=''">

            and d.sku_name =#{skuName}
        </if>
        <if test="cashierId !=null and cashierId !=''">
            and o.guide_id =#{cashierId}
        </if>
        AND o.pay_status = 1 and o.order_type!=3
        group by
        <if test="productCategory !=null and productCategory==0">
            d.type_id
        </if>
        <if test="productCategory !=null and productCategory!=0">
            left(d.type_id,#{productCategory})
        </if>
        <if test="productPropertyCode !=null">
            product_property_code
        </if>
        <if test="brandId !=null">
            d.brand_id,d.brand_name
        </if>
        <if test="skuCode !=null or skuName!=null">
            d.sku_code ,
            d.sku_name
        </if>
        <if test="cashierId !=null">

            o.guide_id ,
            o.guide_name
        </if>
        union
        SELECT
        <if test="productCategory !=null and productCategory==0">
            d.type_id code,
        </if>
        <if test="productCategory !=null and productCategory!=0">
            left(d.type_id,#{productCategory}) code,
        </if>
        <if test="productPropertyCode !=null">
            product_property_code code,
            product_property_name as name,
        </if>
        <if test="brandId !=null">
            d.brand_id code,
            d.brand_name as name,
        </if>
        <if test="skuCode !=null or skuName!=null">
            d.sku_code code,
            d.sku_name as name,
        </if>
        <if test="cashierId !=null">
            o.cashier_id code,
            o.cashier_name as name,
        </if>
        - sum( a.return_amount  ) saleProductNum,
        - sum( a.return_price ) totalAmount,
        sum( cost_price ) productCost
        FROM
        order_consumer_detail d,
        order_consumer_info o,
        order_after_sale_detail a
        WHERE
        o.order_id = d.order_id
        and a. order_detail_id = d.order_detail_id
        <if test="beginTime !=null">
            AND a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime !=null">
            AND a.create_time &lt;= #{endTime}
        </if>
        AND o.distributor_id = #{distributorId}
        <if test="productPropertyCode !=null and productPropertyCode!=''">
            and product_property_code =#{ productPropertyCode}
        </if>
        <if test="brandId !=null and brandId!=''">
            and d. brand_id =#{ brandId}
        </if>
        <if test="skuCode !=null and skuCode!=''">
            and d.sku_code =#{ skuCode}

        </if>
        <if test="skuName !=null and skuName!=''">

            and d.sku_name =#{skuName}
        </if>
        <if test="cashierId !=null and cashierId !=''">
            and o.guide_id =#{cashierId}
        </if>

        group by
        <if test="productCategory !=null and productCategory==0">
            d.type_id
        </if>
        <if test="productCategory !=null and productCategory!=0">
            left(d.type_id,#{productCategory})
        </if>
        <if test="productPropertyCode !=null">
            product_property_code
        </if>
        <if test="brandId !=null">
            d.brand_id,d.brand_name
        </if>
        <if test="skuCode !=null or skuName!=null">
            d.sku_code ,
            d.sku_name
        </if>
        <if test="cashierId !=null">

            o.guide_id ,
            o.guide_name
        </if>
        )as t

    </select>
    <select id="costAndSalesByCategoryCount" resultType="long">
        select count(* ) FROM (
        SELECT
        type_id
        FROM
        order_consumer_detail d,
        order_consumer_info o
        WHERE
        o.order_id = d.order_id
        <if test="beginTime !=null">
            AND o.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime !=null">
            AND o.create_time &lt;= #{endTime}
        </if>
        AND o.distributor_id = #{distributorId}
        AND o.pay_status = 1  and o.order_type!=3

        group by left(type_id,#{productCategory})
        ) as a
    </select>
    <select id="statistics" resultType="com.aiqin.mgs.order.api.domain.OrderStatisticsRespVo">
        SELECT
            sum(count) saleTotal,
            sum(sum1) pointsDeductionAmount,
            sum(sum2) actualPaymentAmount
        FROM
        (
        SELECT
            1 count,
            sum( b.cost_points ) sum1,
            sum( b.total_price ) sum2
        FROM
        order_consumer_info a left join order_consumer_detail b on a.order_id = b.order_id
        <if test="(skuName!=null and skuName!='') or (barCodeAndSku !=null and barCodeAndSku != '')">
            and a.order_id = b.order_id
            <if test="skuName!=null and skuName!='' ">
                and b.sku_name like concat('%',#{skuName,jdbcType=VARCHAR},'%')
            </if>
            <if test="barCodeAndSku!=null and barCodeAndSku!='' ">
                and (b.sku_code = #{barCodeAndSku} or b.bar_code = #{barCodeAndSku})
            </if>
        </if>
        WHERE 1=1
        <choose>
            <when test="orderType!=null and orderType!='' ">
                and a.order_type = #{orderType}
            </when>
            <otherwise>
                and (order_type = 1 or order_type = 4)
            </otherwise>
        </choose>
        <if test="distributorId!=null and distributorId!='' ">
            and a.distributor_id = #{distributorId}
        </if>
        <if test="distributorCode!=null and distributorCode!='' ">
            and a.distributor_code = #{distributorCode}
        </if>

        <if test="listDistributorId != null">
            and a.distributor_id in (
            <foreach collection="listDistributorId" item="distributorId" separator=",">
                '${distributorId}'
            </foreach>
            )
        </if>
        <if test="distributorName!=null and distributorName!=''">
            and a.distributor_name like concat('%',#{distributorName,jdbcType=VARCHAR},'%')
        </if>
        <if test="orderId!=null and orderId!=''">
            and a.order_id = #{orderId}
        </if>
        <if test="orderCode!=null and orderCode!=''">
            and a.order_code like concat('%',#{orderCode,jdbcType=VARCHAR},'%')
        </if>
        <if test="memberId!=null and memberId!=''">
            and a.member_id =#{memberId}
        </if>
        <if test="memberidList != null">
            and a.member_id in (
            <foreach collection="memberidList" item="member_id" separator=",">
                '${member_id}'
            </foreach>
            )
        </if>
        <if test="memberPhone!=null and memberPhone!=''">
            and a.member_phone like concat('%',#{memberPhone,jdbcType=VARCHAR},'%')
        </if>
        <if test="codeAndPhone!=null and codeAndPhone!=''">
            and (a.member_phone like concat('%',#{codeAndPhone,jdbcType=VARCHAR},'%') or a.order_code like
            concat('%',#{codeAndPhone,jdbcType=VARCHAR},'%'))
        </if>
        <if test="orderStatus!=null ">
            and a.order_status = #{orderStatus}
        </if>
        <if test="orderStatusList != null">
            and a.order_status in (
            <foreach collection="orderStatusList" item="order_status" separator=",">
                '${order_status}'
            </foreach>
            )
        </if>
        <if test="beginTime!=null ">
            and a.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime!=null ">
            and a.create_time &lt;= #{endTime}
        </if>
        <if test="updateTime!=null ">
            and a.update_time &gt;= #{updateTime}
        </if>
        <if test="originTypeList != null">
            and a.origin_type in (
            <foreach collection="originTypeList" item="origin_type" separator=",">
                '${origin_type}'
            </foreach>
            )
        </if>
        <if test="orderIdList != null">
            and a.order_id in (
            <foreach collection="orderIdList" item="order_id" separator=",">
                '${order_id}'
            </foreach>
            )
        </if>
        <if test="noExistOrderCodeList != null">
            and a.order_code not in (
            <foreach collection="noExistOrderCodeList" item="order_code" separator=",">
                '${order_code}'
            </foreach>
            )
        </if>
        <if test="receiveType!=null ">
            and a.receive_type =#{receiveType}
        </if>
        <if test="receiveCode!=null and receiveCode!='' ">
            and a.receive_code =#{receiveCode}
        </if>
        <if test="originType!=null  ">
            and a.origin_type =#{originType}
        </if>
        <if test="payType!=null and payType!='' ">
            and a.pay_type =#{payType}
        </if>
        group by a.id)c
    </select>
</mapper>

