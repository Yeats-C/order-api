<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.mgs.order.api.dao.order.ErpOrderItemDao">

    <select id="select" parameterType="com.aiqin.mgs.order.api.domain.po.order.ErpOrderItem"
            resultType="com.aiqin.mgs.order.api.domain.po.order.ErpOrderItem">
        select
        id as id,
        order_info_detail_id as orderInfoDetailId,
        order_store_id as orderStoreId,
        order_store_code as orderStoreCode,
        spu_code as spuCode,
        spu_name as spuName,
        sku_code as skuCode,
        sku_name as skuName,
        bar_code as barCode,
        product_property_code as productPropertyCode,
        product_property_name as productPropertyName,
        supplier_code as supplierCode,
        supplier_name as supplierName,
        picture_url as pictureUrl,
        product_spec as productSpec,
        color_code as colorCode,
        color_name as colorName,
        model_code as modelCode,
        unit_code as unitCode,
        unit_name as unitName,
        zero_disassembly_coefficient as zeroDisassemblyCoefficient,
        product_type as productType,
        product_count as productCount,
        product_amount as productAmount,
        product_amount as priceTax,
        purchase_amount as purchaseAmount,
        total_product_amount as totalProductAmount,
        actual_total_product_amount as actualTotalProductAmount,
        total_preferential_amount as totalPreferentialAmount,
        preferential_amount as preferentialAmount,
        total_acivity_amount as totalAcivityAmount,
        actual_inbound_count as actualInboundCount,
        actual_product_count as actualProductCount,
        return_product_count as returnProductCount,
        tax_rate as taxRate,
        activity_code as activityCode,
        line_code as lineCode,
        gift_line_code as giftLineCode,
        company_code as companyCode,
        company_name as companyName,
        sign_difference_reason as signDifferenceReason,
        use_status as useStatus,
        box_gross_weight as boxGrossWeight,
        box_volume as boxVolume,
        activity_price as activityPrice,
        product_brand_code as productBrandCode,
        product_brand_name as productBrandName,
        product_category_code as productCategoryCode,
        product_category_name as productCategoryName,
        activity_id as activityId,
        is_activity as isActivity,
        create_by_id as createById,
        create_by_name as createByName,
        update_by_id as updateById,
        update_by_name as updateByName,
        create_time as createTime,
        update_time as updateTime,
        preferential_amount as preferentialAmount,
        top_coupon_discount_amount as topCouponDiscountAmount,
        top_coupon_amount as topCouponAmount,
        batch_code as batchCode,
        batch_date as batchDate,
        warehouse_type_code as warehouseTypeCode,
        batch_info_code as batchInfoCode
        from order_store_detail
        where 1 = 1
        <if test=" id != null and id != '' ">
            and id = #{id}
        </if>
        <if test=" orderInfoDetailId != null and orderInfoDetailId != '' ">
            and order_info_detail_id = #{orderInfoDetailId}
        </if>
        <if test=" orderStoreId != null and orderStoreId != '' ">
            and order_store_id = #{orderStoreId}
        </if>
        <if test=" orderStoreCode != null and orderStoreCode != '' ">
            and order_store_code = #{orderStoreCode}
        </if>
        <if test=" lineCode != null and lineCode != '' ">
            and line_code = #{lineCode}
        </if>
        <if test=" useStatus != null and useStatus != '' or useStatus == 0 ">
            and use_status = #{useStatus}
        </if>
        <if test=" isActivity != null">
            and is_activity = #{isActivity}
        </if>
        <if test=" productType != null">
            and product_type = #{productType}
        </if>
        order by create_time asc
        <if test="pageSize!=null ">
            limit #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>


    <update id="updateByPrimaryKeySelective">
        update order_store_detail
        set
        <if test="productCount != null and productCount != '' or productCount == 0 ">
            product_count = #{productCount},
        </if>
        <if test="actualProductCount != null and actualProductCount != '' or actualProductCount == 0 ">
            actual_product_count = #{actualProductCount},
        </if>
        <if test="actualInboundCount != null and actualInboundCount != '' or actualInboundCount == 0 ">
            actual_inbound_count = #{actualInboundCount},
        </if>
        <if test="totalProductAmount != null and totalProductAmount != '' or totalProductAmount == 0 ">
            total_product_amount = #{totalProductAmount},
        </if>
        <if test="totalPreferentialAmount != null and totalPreferentialAmount != '' or totalPreferentialAmount == 0 ">
            total_preferential_amount = #{totalPreferentialAmount},
        </if>
        <if test="preferentialAmount != null and preferentialAmount != '' or preferentialAmount == 0 ">
            preferential_amount = #{preferentialAmount},
        </if>
        <if test="totalAcivityAmount != null and totalAcivityAmount != '' or totalAcivityAmount == 0 ">
            total_acivity_amount = #{totalAcivityAmount},
        </if>
        <if test="actualTotalProductAmount != null and actualTotalProductAmount != '' or actualTotalProductAmount == 0 ">
            actual_total_product_amount = #{actualTotalProductAmount},
        </if>
        <if test="returnProductCount != null and returnProductCount != '' or returnProductCount == 0 ">
            return_product_count = #{returnProductCount},
        </if>
        <if test="useStatus != null and useStatus != '' or useStatus == 0">
            use_status = #{useStatus},
        </if>
        <if test="signDifferenceReason != null and signDifferenceReason != '' ">
            sign_difference_reason = #{signDifferenceReason},
        </if>
        <if test="topCouponDiscountAmount != null ">
            top_coupon_discount_amount = #{topCouponDiscountAmount},
        </if>
        <if test="topCouponAmount != null ">
            top_coupon_amount = #{topCouponAmount},
        </if>
        <if test="transportCenterCode != null and transportCenterCode != ''">
            transport_center_code = #{transportCenterCode},
        </if>
        <if test="transportCenterName != null and transportCenterName != ''">
            transport_center_name = #{transportCenterName},
        </if>
        <if test="warehouseCode != null and warehouseCode != ''">
            warehouse_code = #{warehouseCode},
        </if>
        <if test="warehouseName != null and warehouseName != ''">
            warehouse_name = #{warehouseName},
        </if>
        update_by_id = #{updateById},
        update_by_name = #{updateByName},
        update_time = sysdate()
        where id = #{id}
    </update>

    <insert id="insert">
        insert into order_store_detail(order_info_detail_id, order_store_id, order_store_code, spu_code, spu_name,
                                       sku_code,
                                       sku_name, product_property_code, product_property_name, supplier_code,
                                       supplier_name,
                                       bar_code, picture_url, product_spec, color_code, color_name, model_code,
                                       unit_code,
                                       unit_name, zero_disassembly_coefficient, product_type, product_count,
                                       product_amount,
                                       purchase_amount, total_product_amount, actual_total_product_amount,
                                       total_preferential_amount, preferential_amount, total_acivity_amount,
                                       actual_inbound_count,
                                       actual_product_count, return_product_count, tax_rate, activity_code, line_code,
                                       gift_line_code, company_code, company_name, sign_difference_reason, box_gross_weight, box_volume,
                                       product_brand_code,product_brand_name,product_category_code,product_category_name,activity_id,is_activity,activity_price,
                                       use_status, create_by_id, create_by_name, update_by_id, update_by_name, create_time,
                                       update_time,top_coupon_discount_amount,top_coupon_amount,batch_code,batch_date
                                       ,warehouse_type_code,batch_info_code,transport_center_code,transport_center_name,
                                       warehouse_code,warehouse_name)
        values (#{orderInfoDetailId}, #{orderStoreId}, #{orderStoreCode}, #{spuCode}, #{spuName},
                #{skuCode}, #{skuName}, #{productPropertyCode}, #{productPropertyName}, #{supplierCode},
                #{supplierName},
                #{barCode}, #{pictureUrl}, #{productSpec}, #{colorCode}, #{colorName},
                #{modelCode}, #{unitCode}, #{unitName}, #{zeroDisassemblyCoefficient}, #{productType},
                #{productCount}, #{productAmount}, #{purchaseAmount}, #{totalProductAmount},
                #{actualTotalProductAmount}, #{totalPreferentialAmount}, #{preferentialAmount}, #{totalAcivityAmount},
                #{actualInboundCount}, #{actualProductCount}, #{returnProductCount}, #{taxRate},
                #{activityCode}, #{lineCode}, #{giftLineCode}, #{companyCode}, #{companyName},
                #{signDifferenceReason}, #{boxGrossWeight}, #{boxVolume},
                #{productBrandCode},#{productBrandName},#{productCategoryCode},#{productCategoryName},#{activityId},#{isActivity},#{activityPrice},
                #{useStatus}, #{createById}, #{createByName}, #{updateById},
                #{updateByName}, sysdate(), sysdate(),#{topCouponDiscountAmount},#{topCouponAmount},#{batchCode}
                ,#{batchDate},#{warehouseTypeCode},#{batchInfoCode},#{transportCenterCode},#{transportCenterName},
                #{warehouseCode},#{warehouseName})
    </insert>

    <select id="getProductSales" resultType="java.math.BigDecimal" parameterType="com.aiqin.mgs.order.api.domain.Activity">
        SELECT
            SUM( total_product_amount ) AS productSales
        FROM
            order_store_detail
        WHERE
            is_activity =1
        <if test="activityId != '' and activityId != null">
            and activity_id = #{activityId}
        </if>
    </select>
    <select id="totalCount" resultType="java.lang.Integer">

        select
        count(1)
        FROM
        order_store_detail d
        LEFT JOIN order_store_info o ON d.order_store_code = o.order_store_code
        WHERE
        1 = 1
        <if test=" id != null and id != '' ">
            and d.id = #{id}
        </if>
        <if test=" orderInfoDetailId != null and orderInfoDetailId != '' ">
            and d.order_info_detail_id = #{orderInfoDetailId}
        </if>
        <if test=" orderStoreId != null and orderStoreId != '' ">
            and d.order_store_id = #{orderStoreId}
        </if>
        <if test=" orderStoreCode != null and orderStoreCode != '' ">
            and d.order_store_code = #{orderStoreCode}
        </if>
        <if test=" lineCode != null and lineCode != '' ">
            and d.line_code = #{lineCode}
        </if>
        <if test=" useStatus != null and useStatus != '' or useStatus == 0 ">
            and d.use_status = #{useStatus}
        </if>
        <if test=" isActivity != null">
            and d.is_activity = #{isActivity}
        </if>
    </select>
    <select id="getActivityItem" resultType="com.aiqin.mgs.order.api.domain.po.order.ErpOrderItem">
        SELECT
        d.id AS id,
        d.order_info_detail_id AS orderInfoDetailId,
        d.order_store_id AS orderStoreId,
        d.order_store_code AS orderStoreCode,
        d.spu_code AS spuCode,
        d.spu_name AS spuName,
        d.sku_code AS skuCode,
        d.sku_name AS skuName,
        d.bar_code AS barCode,
        d.product_property_code AS productPropertyCode,
        d.product_property_name AS productPropertyName,
        d.supplier_code AS supplierCode,
        d.supplier_name AS supplierName,
        d.picture_url AS pictureUrl,
        d.product_spec AS productSpec,
        d.color_code AS colorCode,
        d.color_name AS colorName,
        d.model_code AS modelCode,
        d.unit_code AS unitCode,
        d.unit_name AS unitName,
        d.zero_disassembly_coefficient AS zeroDisassemblyCoefficient,
        d.product_type AS productType,
        d.product_count AS productCount,
        d.product_amount AS productAmount,
        d.purchase_amount AS purchaseAmount,
        d.total_product_amount AS totalProductAmount,
        d.actual_total_product_amount AS actualTotalProductAmount,
        d.total_preferential_amount AS totalPreferentialAmount,
        d.preferential_amount AS preferentialAmount,
        d.total_acivity_amount AS totalAcivityAmount,
        d.actual_inbound_count AS actualInboundCount,
        d.actual_product_count AS actualProductCount,
        d.return_product_count AS returnProductCount,
        d.tax_rate AS taxRate,
        d.activity_code AS activityCode,
        d.line_code AS lineCode,
        d.gift_line_code AS giftLineCode,
        d.company_code AS companyCode,
        d.company_name AS companyName,
        d.sign_difference_reason AS signDifferenceReason,
        d.use_status AS useStatus,
        d.box_gross_weight AS boxGrossWeight,
        d.box_volume AS boxVolume,
        d.create_by_id AS createById,
        d.create_by_name AS createByName,
        d.update_by_id AS updateById,
        d.update_by_name AS updateByName,
        o.create_time AS createTime,
        d.update_time AS updateTime,
        d.preferential_amount AS preferentialAmount,
        o.order_status as orderStatus,
        o.store_code as storeCode,
        o.store_name as storeName
        FROM
        order_store_detail d
        LEFT JOIN order_store_info o ON d.order_store_code = o.order_store_code
        WHERE
        1 = 1
        <if test=" id != null and id != '' ">
            and d.id = #{id}
        </if>
        <if test=" orderInfoDetailId != null and orderInfoDetailId != '' ">
            and d.order_info_detail_id = #{orderInfoDetailId}
        </if>
        <if test=" orderStoreId != null and orderStoreId != '' ">
            and d.order_store_id = #{orderStoreId}
        </if>
        <if test=" orderStoreCode != null and orderStoreCode != '' ">
            and d.order_store_code = #{orderStoreCode}
        </if>
        <if test=" lineCode != null and lineCode != '' ">
            and d.line_code = #{lineCode}
        </if>
        <if test=" useStatus != null and useStatus != '' or useStatus == 0 ">
            and d.use_status = #{useStatus}
        </if>
        <if test=" isActivity != null">
            and d.is_activity = #{isActivity}
        </if>
        order by d.create_time asc
        <if test="pageSize!=null ">
            limit #{beginIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

</mapper>

