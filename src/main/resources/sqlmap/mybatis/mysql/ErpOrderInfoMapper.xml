<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiqin.mgs.order.api.dao.order.ErpOrderInfoDao">

    <select id="select" parameterType="com.aiqin.mgs.order.api.domain.po.order.ErpOrderInfo"
            resultType="com.aiqin.mgs.order.api.domain.po.order.ErpOrderInfo">
        select
        id as id,
        order_id as orderId,
        order_code as orderCode,
        order_status as orderStatus,
        order_type as orderType,
        order_origin_type as orderOriginType,
        order_channel_type as orderChannelType,
        order_level as orderLevel,
        primary_code as primaryCode,
        split_status as splitStatus,
        return_status as returnStatus,
        before_cancel_status as beforeCancelStatus,
        fee_id as feeId,
        logistics_id as logisticsId,
        supplier_code as supplierCode,
        supplier_name as supplierName,
        repertory_code as repertoryCode,
        repertory_name as repertoryName,
        franchisee_id as franchiseeId,
        franchisee_code as franchiseeCode,
        franchisee_name as franchiseeName,
        store_id as storeId,
        store_code as storeCode,
        store_name as storeName,
        create_time as createTime,
        create_by_id as createById,
        create_by_name as createByName,
        update_time as updateTime,
        update_by_id as updateById,
        update_by_name as updateByName,
        status as status
        from order_store_info
        where 1 = 1
        and status = 1
        <if test="id != null and id != ''">
            and id = #{id}
        </if>
        <if test="orderId != null and orderId != ''">
            and order_id = #{orderId}
        </if>
        <if test="orderCode != null and orderCode != ''">
            and order_code = #{orderCode}
        </if>
        <if test="orderStatus != null and orderStatus != '' or orderStatus == 0">
            and order_status = #{orderStatus}
        </if>
        <if test="orderLevel != null and orderLevel != '' or orderLevel == 0">
            and order_level = #{orderLevel}
        </if>
        <if test="orderType != null and orderType != '' or orderType == 0">
            and order_type = #{orderType}
        </if>
        <if test="splitStatus != null and splitStatus != '' or splitStatus == 0">
            and split_status = #{splitStatus}
        </if>
        <if test="returnStatus != null and returnStatus != '' or returnStatus == 0">
            and return_status = #{returnStatus}
        </if>
        <if test="orderOriginType != null and orderOriginType != '' or orderOriginType == 0">
            and order_origin_type = #{orderOriginType}
        </if>
        <if test="orderChannelType != null and orderChannelType != '' or orderChannelType == 0">
            and order_channel_type = #{orderChannelType}
        </if>
        <if test="beforeCancelStatus != null and beforeCancelStatus != '' or beforeCancelStatus == 0">
            and before_cancel_status = #{beforeCancelStatus}
        </if>
        <if test="primaryCode != null and primaryCode != ''">
            and primary_code = #{primaryCode}
        </if>
        <if test="logisticsId != null and logisticsId != ''">
            and logistics_id = #{logisticsId}
        </if>
        <if test="feeId != null and feeId != ''">
            and fee_id = #{feeId}
        </if>
        <if test="supplierCode != null and supplierCode != ''">
            and supplier_code = #{supplierCode}
        </if>
        <if test="repertoryCode != null and repertoryCode != ''">
            and repertory_code = #{repertoryCode}
        </if>
        <if test="franchiseeId != null and franchiseeId != ''">
            and franchisee_id = #{franchiseeId}
        </if>
        <if test="franchiseeCode != null and franchiseeCode != ''">
            and franchisee_code = #{franchiseeCode}
        </if>
        <if test="storeId != null and storeId != ''">
            and store_id = #{storeId}
        </if>
        <if test="storeCode != null and storeCode != ''">
            and store_code = #{storeCode}
        </if>
        order by create_time desc

    </select>

    <update id="updateByPrimaryKeySelective">
        update order_store_info
        set
        <if test="orderStatus != null and orderStatus != '' or orderStatus == 0">
            order_status = #{orderStatus},
        </if>
        <if test="returnStatus != null and returnStatus != '' or returnStatus == 0">
            return_status = #{returnStatus},
        </if>
        <if test="splitStatus != null and splitStatus != '' or splitStatus == 0">
            split_status = #{splitStatus},
        </if>
        <if test="beforeCancelStatus != null and beforeCancelStatus != '' or beforeCancelStatus == 0">
            before_cancel_status = #{beforeCancelStatus},
        </if>
        <if test="primaryCode != null and primaryCode != ''">
            primary_code = #{primaryCode},
        </if>
        <if test="supplierCode != null and supplierCode != ''">
            supplier_code = #{supplierCode},
        </if>
        <if test="supplierName != null and supplierName != ''">
            supplier_name = #{supplierName},
        </if>
        <if test="repertoryCode != null and repertoryCode != ''">
            repertory_code = #{repertoryCode},
        </if>
        <if test="repertoryName != null and repertoryName != ''">
            repertory_name = #{repertoryName},
        </if>
        <if test="logisticsId != null and logisticsId != ''">
            logistics_id = #{logisticsId},
        </if>
        update_by_id = #{updateById},
        update_by_name = #{updateByName},
        update_time = sysdate()
        where id = #{id}
    </update>

    <insert id="insert">
        insert into order_store_info (order_id, order_code, order_status, order_type, order_origin_type,
                                      order_channel_type, order_level, primary_code, split_status,
                                      return_status, before_cancel_status,
                                      logistics_id, fee_id, supplier_code, supplier_name, repertory_code,
                                      repertory_name, franchisee_id, franchisee_code, franchisee_name,
                                      store_id, store_code, store_name, create_time, create_by_id,
                                      create_by_name, update_time, update_by_id, update_by_name, status)
        values (#{orderId}, #{orderCode}, #{orderStatus}, #{orderType}, #{orderOriginType},
                #{orderChannelType}, #{orderLevel}, #{primaryCode}, #{splitStatus},
                #{returnStatus}, #{beforeCancelStatus},
                #{logisticsId}, #{feeId}, #{supplierCode}, #{supplierName}, #{repertoryCode},
                #{repertoryName}, #{franchiseeId}, #{franchiseeCode}, #{franchiseeName},
                #{storeId}, #{storeCode}, #{storeName}, sysdate(), #{createById},
                #{createByName}, sysdate(), #{updateById}, #{updateByName}, #{status})
    </insert>

    <select id="findOrderList" parameterType="com.aiqin.mgs.order.api.domain.po.order.ErpOrderInfo"
            resultType="com.aiqin.mgs.order.api.domain.po.order.ErpOrderInfo">
        select
        a1.id as id,
        a1.order_id as orderId,
        a1.order_code as orderCode,
        a1.order_status as orderStatus,
        a2.pay_status as payStatus,
        a1.order_type as orderType,
        a1.order_origin_type as orderOriginType,
        a1.order_channel_type as orderChannelType,
        a1.order_level as orderLevel,
        a1.primary_code as primaryCode,
        a1.split_status as splitStatus,
        a1.return_status as returnStatus,
        a2.total_money as totalMoney,
        a2.activity_money as activityMoney,
        a2.suit_coupon_money as suitCouponMoney,
        a2.top_coupon_money as topCouponMoney,
        a2.pay_money as payMoney,
        a2.goods_coupon as goodsCoupon,
        a1.before_cancel_status as beforeCancelStatus,
        a1.logistics_id as logisticsId,
        a1.fee_id as feeId,
        a1.supplier_code as supplierCode,
        a1.supplier_name as supplierName,
        a1.repertory_code as repertoryCode,
        a1.repertory_name as repertoryName,
        a1.franchisee_id as franchiseeId,
        a1.franchisee_code as franchiseeCode,
        a1.franchisee_name as franchiseeName,
        a1.store_id as storeId,
        a1.store_code as storeCode,
        a1.store_name as storeName,
        a1.create_time as createTime,
        a1.create_by_id as createById,
        a1.create_by_name as createByName,
        a1.update_time as updateTime,
        a1.update_by_id as updateById,
        a1.update_by_name as updateByName,
        a1.status as status
        from order_store_info a1
        left join order_store_fee a2 on a1.fee_id = a2.fee_id
        where 1 = 1
        <if test="orderCode != null and orderCode != ''">
            and a1.order_code like concat('%',#{orderCode,jdbcType=VARCHAR},'%')
        </if>
        <if test="storeName != null and storeName != ''">
            and a1.store_name like concat('%',#{storeName,jdbcType=VARCHAR},'%')
        </if>
        <if test="orderStatus != null and orderStatus != '' or orderStatus == 0 ">
            and a1.order_status = #{orderStatus}
        </if>
        <if test="payStatus != null and payStatus != '' or payStatus == 0 ">
            and a2.pay_status = #{payStatus}
        </if>
        <if test="orderType != null and orderType != '' or orderType == 0 ">
            and a1.order_type = #{orderType}
        </if>
        <if test="createTimeStart != null and createTimeStart != ''">
            and date_format(a1.create_time,'%Y-%m-%d') &gt;= #{createTimeStart,jdbcType=VARCHAR}
        </if>
        <if test="createTimeEnd != null and createTimeEnd != ''">
            and date_format(a1.create_time,'%Y-%m-%d') &lt;= #{createTimeEnd,jdbcType=VARCHAR}
        </if>
        order by a1.create_time desc
    </select>

    <select id="findSecondaryOrderList" parameterType="java.util.List"
            resultType="com.aiqin.mgs.order.api.domain.po.order.ErpOrderInfo">
        select
        a1.id as id,
        a1.order_id as orderId,
        a1.order_code as orderCode,
        a1.order_status as orderStatus,
        a2.pay_status as payStatus,
        a1.order_type as orderType,
        a1.order_origin_type as orderOriginType,
        a1.order_channel_type as orderChannelType,
        a1.order_level as orderLevel,
        a1.primary_code as primaryCode,
        a1.split_status as splitStatus,
        a1.return_status as returnStatus,
        a2.total_money as totalMoney,
        a2.activity_money as activityMoney,
        a2.suit_coupon_money as suitCouponMoney,
        a2.top_coupon_money as topCouponMoney,
        a2.pay_money as payMoney,
        a2.goods_coupon as goodsCoupon,
        a1.before_cancel_status as beforeCancelStatus,
        a1.logistics_id as logisticsId,
        a2.pay_id as payId,
        a1.supplier_code as supplierCode,
        a1.supplier_name as supplierName,
        a1.repertory_code as repertoryCode,
        a1.repertory_name as repertoryName,
        a1.franchisee_id as franchiseeId,
        a1.franchisee_code as franchiseeCode,
        a1.franchisee_name as franchiseeName,
        a1.store_id as storeId,
        a1.store_code as storeCode,
        a1.store_name as storeName,
        a1.create_time as createTime,
        a1.create_by_id as createById,
        a1.create_by_name as createByName,
        a1.update_time as updateTime,
        a1.update_by_id as updateById,
        a1.update_by_name as updateByName,
        a1.status as status
        from order_store_info a1
        left join order_store_fee a2 on a1.fee_id = a2.fee_id
        where 1 = 1
        and order_level = 2
        and primary_code in (
        <foreach collection="primaryOrderCodeList" item="primaryCode" separator=",">
            '${primaryCode}'
        </foreach>
        )
        order by create_time desc
    </select>

</mapper>

